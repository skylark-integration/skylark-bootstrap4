{"version":3,"sources":["skylark-bootstrap4.js"],"names":["define","skylark","ui","bs4","$","eventer","Util","TRANSITION_END","[object Object]","prefix","Math","random","document","getElementById","element","selector","getAttribute","hrefAttr","trim","querySelector","transitionDuration","css","transitionDelay","floatTransitionDuration","parseFloat","floatTransitionDelay","split","reflow","offsetHeight","trigger","supportsTransitionEnd","Boolean","isElement","obj","nodeType","componentName","config","configTypes","property","Object","prototype","hasOwnProperty","call","expectedTypes","value","valueType","toString","match","toLowerCase","RegExp","test","Error","toUpperCase","documentElement","attachShadow","getRootNode","root","ShadowRoot","parentNode","findShadowRoot","special","bsTransitionEnd","transitionEnd","plugins","VERSION","DATA_KEY","EVENT_KEY","jquery_NO_CONFLICT","fn","Event","CLOSE","CLOSED","CLICK_DATA_API","ClassName","ALERT","FADE","SHOW","Alert","this","_element","rootElement","_getRootElement","customEvent","_triggerCloseEvent","isDefaultPrevented","_removeElement","removeData","getSelectorFromElement","parent","closest","closeEvent","removeClass","hasClass","_destroyElement","getTransitionDurationFromElement","one","event","emulateTransitionEnd","detach","remove","each","$element","data","alertInstance","preventDefault","close","on","_handleDismiss","_jqueryInterface","Constructor","noConflict","NAME","ACTIVE","BUTTON","FOCUS","Selector","DATA_TOGGLE_CARROT","DATA_TOGGLE","INPUT","FOCUS_BLUR_DATA_API","Button","triggerChangeEvent","addAriaPressed","input","type","checked","classList","contains","activeElement","hasAttribute","focus","setAttribute","toggleClass","button","target","langx","ARROW_LEFT_KEYCODE","ARROW_RIGHT_KEYCODE","TOUCHEVENT_COMPAT_WAIT","SWIPE_THRESHOLD","Default","interval","keyboard","slide","pause","wrap","touch","DefaultType","Direction","NEXT","PREV","LEFT","RIGHT","SLIDE","SLID","KEYDOWN","MOUSEENTER","MOUSELEAVE","TOUCHSTART","TOUCHMOVE","TOUCHEND","POINTERDOWN","POINTERUP","DRAG_START","LOAD_DATA_API","CAROUSEL","ITEM","POINTER_EVENT","ACTIVE_ITEM","ITEM_IMG","NEXT_PREV","INDICATORS","DATA_SLIDE","DATA_RIDE","PointerType","TOUCH","PEN","Carousel","_items","_interval","_activeElement","_isPaused","_isSliding","touchTimeout","touchStartX","touchDeltaX","_config","_getConfig","_indicatorsElement","_touchSupported","navigator","maxTouchPoints","_pointerEvent","window","PointerEvent","MSPointerEvent","_addEventListeners","_slide","hidden","is","next","triggerTransitionEnd","cycle","clearInterval","setInterval","visibilityState","nextWhenVisible","bind","index","activeIndex","_getItemIndex","length","to","direction","off","mixin","typeCheckConfig","absDeltax","abs","prev","_keydown","_addTouchEventListeners","start","originalEvent","pointerType","clientX","touches","move","end","_handleSwipe","clearTimeout","setTimeout","querySelectorAll","e","add","tagName","which","slice","indexOf","isNextDirection","isPrevDirection","lastItemIndex","isGoingToWrap","delta","itemIndex","relatedTarget","eventDirectionName","targetIndex","fromIndex","slideEvent","from","indicators","nextIndicator","children","addClass","activeElementIndex","nextElement","_getItemByDirection","nextElementIndex","isCycling","directionalClassName","orderClassName","_triggerSlideEvent","_setActiveIndicatorElement","slidEvent","nextElementInterval","parseInt","defaultInterval","action","TypeError","slideIndex","_dataApiClickHandler","carousels","i","len","$carousel","toggle","SHOWN","HIDE","HIDDEN","COLLAPSE","COLLAPSING","COLLAPSED","Dimension","WIDTH","HEIGHT","ACTIVES","Collapse","_isTransitioning","_triggerArray","id","toggleList","elem","filterElement","filter","foundElem","_selector","push","_parent","_getParent","_addAriaAndCollapsedClass","hide","show","actives","activesData","not","startEvent","dimension","_getDimension","style","attr","setTransitioning","capitalizedDimension","scrollSize","getBoundingClientRect","triggerArrayLength","$elem","isTransitioning","hasWidth","utils","dom","query","_getTargetFromElement","triggerArray","isOpen","$this","currentTarget","$trigger","selectors","$target","Popper","ESCAPE_KEYCODE","SPACE_KEYCODE","TAB_KEYCODE","ARROW_UP_KEYCODE","ARROW_DOWN_KEYCODE","RIGHT_MOUSE_BUTTON_WHICH","REGEXP_KEYDOWN","CLICK","KEYDOWN_DATA_API","KEYUP_DATA_API","DISABLED","DROPUP","DROPRIGHT","DROPLEFT","MENURIGHT","MENULEFT","POSITION_STATIC","FORM_CHILD","MENU","NAVBAR_NAV","VISIBLE_ITEMS","AttachmentMap","TOP","TOPEND","BOTTOM","BOTTOMEND","RIGHTEND","LEFTEND","offset","flip","boundary","reference","display","Dropdown","_popper","_menu","_getMenuElement","_inNavbar","_detectNavbar","disabled","_getParentFromElement","isActive","_clearMenus","showEvent","referenceElement","_getPopperConfig","body","noop","hideEvent","destroy","scheduleUpdate","stopPropagation","constructor","$parentDropdown","placement","offsetConf","offsets","popperConfig","_getPlacement","modifiers","enabled","preventOverflow","boundariesElement","applyStyle","toggles","context","clickEvent","dropdownMenu","items","_dataApiKeydownHandler","backdrop","FOCUSIN","RESIZE","CLICK_DISMISS","KEYDOWN_DISMISS","MOUSEUP_DISMISS","MOUSEDOWN_DISMISS","SCROLLBAR_MEASURER","BACKDROP","OPEN","DIALOG","DATA_DISMISS","FIXED_CONTENT","STICKY_CONTENT","Modal","_dialog","_backdrop","_isShown","_isBodyOverflowing","_ignoreBackdropClick","_scrollbarWidth","_checkScrollbar","_setScrollbar","_adjustDialog","_setEscapeEvent","_setResizeEvent","_showBackdrop","_showElement","transition","_hideModal","forEach","htmlElement","Node","ELEMENT_NODE","appendChild","removeAttribute","scrollTop","_enforceFocus","shownEvent","transitionComplete","has","handleUpdate","_resetAdjustments","_resetScrollbar","callback","animate","createElement","className","appendTo","backdropTransitionDuration","callbackRemove","_removeBackdrop","isModalOverflowing","scrollHeight","clientHeight","paddingLeft","paddingRight","rect","left","right","innerWidth","_getScrollbarWidth","fixedContent","stickyContent","actualPadding","calculatedPadding","actualMargin","marginRight","calculatedMargin","padding","elements","margin","scrollDiv","scrollbarWidth","width","clientWidth","removeChild","CLASS_PREFIX","BSCLS_PREFIX_REGEX","animation","template","title","delay","html","container","fallbackPlacement","AUTO","HoverState","OUT","INSERTED","FOCUSOUT","TOOLTIP","TOOLTIP_INNER","ARROW","Trigger","HOVER","MANUAL","Tooltip","_isEnabled","_timeout","_hoverState","_activeTrigger","tip","_setListeners","dataKey","_getDelegateConfig","click","_isWithActiveTrigger","_enter","_leave","getTipElement","isWithContent","shadowRoot","isInTheDom","ownerDocument","tipId","getUID","setContent","attachment","_getAttachment","addAttachmentClass","_getContainer","behavior","arrow","onCreate","originalPlacement","_handlePopperPlacementChange","onUpdate","complete","_fixTransition","prevHoverState","_cleanTipClass","getTitle","setElementContent","content","empty","append","text","find","triggers","eventIn","eventOut","_fixTitle","titleType","key","$tip","tabClass","join","popperData","popperInstance","instance","popper","initConfigAnimation","TITLE","CONTENT","Popover","_getContent","method","ACTIVATE","SCROLL","DROPDOWN_ITEM","DROPDOWN_MENU","DATA_SPY","NAV_LIST_GROUP","NAV_LINKS","NAV_ITEMS","LIST_ITEMS","DROPDOWN","DROPDOWN_ITEMS","DROPDOWN_TOGGLE","OffsetMethod","OFFSET","POSITION","ScrollSpy","_scrollElement","_offsets","_targets","_activeTarget","_scrollHeight","_process","refresh","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","targets","map","targetSelector","targetBCR","height","top","item","sort","a","b","pageYOffset","max","innerHeight","maxScroll","_getOffsetHeight","_activate","_clear","offsetLength","isActiveTarget","queries","$link","parents","node","scrollSpys","scrollSpysLength","$spy","ACTIVE_UL","DROPDOWN_ACTIVE_CHILD","Tab","previous","listElement","itemSelector","nodeName","makeArray","hiddenEvent","activeElements","active","_transitionComplete","dropdownChild","dropdownElement","dropdownToggleList","SHOWING","autohide","Toast","withoutTimeout","_close","main"],"mappings":"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","file":"../skylark-bootstrap4.js","sourcesContent":["define('skylark-bootstrap4/bs4',[\n  \"skylark-utils-dom/skylark\",\n],function(skylark){\n\tvar ui = skylark.ui = skylark.ui || {}, \n\t\tbs4 = ui.bs4 = {};\n\n\treturn bs4;\n});\n\ndefine('skylark-bootstrap4/util',[\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/eventer'\n], function ($, eventer) {\n    'use strict';\n\n    const TRANSITION_END = 'transitionend';\n    const MAX_UID = 1000000;\n    const MILLISECONDS_MULTIPLIER = 1000;\n\n    function toType(obj) {\n        return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase();\n    }\n\n    /*\n    function getSpecialTransitionEndEvent() {\n        return {\n            bindType: TRANSITION_END,\n            delegateType: TRANSITION_END,\n            handle(event) {\n                if ($(event.target).is(this)) {\n                    return event.handleObj.handler.apply(this, arguments);\n                }\n                return undefined;\n            }\n        };\n    }\n\n    function transitionEndEmulator(duration) {\n        let called = false;\n        $(this).one(Util.TRANSITION_END, () => {\n            called = true;\n        });\n        setTimeout(() => {\n            if (!called) {\n                Util.triggerTransitionEnd(this);\n            }\n        }, duration);\n        return this;\n    }\n\n    function setTransitionEndSupport() {\n        $.fn.emulateTransitionEnd = transitionEndEmulator;\n        $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\n    }\n    */\n    const Util = {\n        TRANSITION_END: 'bsTransitionEnd',\n\n        getUID(prefix) {\n            do {\n                prefix += ~~(Math.random() * MAX_UID);\n            } while (document.getElementById(prefix));\n            return prefix;\n        },\n\n        getSelectorFromElement(element) {\n            let selector = element.getAttribute('data-target');\n            if (!selector || selector === '#') {\n                const hrefAttr = element.getAttribute('href');\n                selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : '';\n            }\n            return selector && document.querySelector(selector) ? selector : null;\n        },\n\n        getTransitionDurationFromElement(element) {\n            if (!element) {\n                return 0;\n            }\n            let transitionDuration = $(element).css('transition-duration');\n            let transitionDelay = $(element).css('transition-delay');\n            const floatTransitionDuration = parseFloat(transitionDuration);\n            const floatTransitionDelay = parseFloat(transitionDelay);\n            if (!floatTransitionDuration && !floatTransitionDelay) {\n                return 0;\n            }\n            transitionDuration = transitionDuration.split(',')[0];\n            transitionDelay = transitionDelay.split(',')[0];\n            return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;\n        },\n\n        reflow(element) {\n            return element.offsetHeight;\n        },\n\n        triggerTransitionEnd(element) {\n            $(element).trigger(TRANSITION_END);\n        },\n\n        supportsTransitionEnd() {\n            return Boolean(TRANSITION_END);\n        },\n\n        isElement(obj) {\n            return (obj[0] || obj).nodeType;\n        },\n\n        typeCheckConfig(componentName, config, configTypes) {\n            for (const property in configTypes) {\n                if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n                    const expectedTypes = configTypes[property];\n                    const value = config[property];\n                    const valueType = value && Util.isElement(value) ? 'element' : toType(value);\n                    if (!new RegExp(expectedTypes).test(valueType)) {\n                        throw new Error(`${ componentName.toUpperCase() }: ` + `Option \"${ property }\" provided type \"${ valueType }\" ` + `but expected type \"${ expectedTypes }\".`);\n                    }\n                }\n            }\n        },\n\n        findShadowRoot(element) {\n            if (!document.documentElement.attachShadow) {\n                return null;\n            }\n            if (typeof element.getRootNode === 'function') {\n                const root = element.getRootNode();\n                return root instanceof ShadowRoot ? root : null;\n            }\n            if (element instanceof ShadowRoot) {\n                return element;\n            }\n            if (!element.parentNode) {\n                return null;\n            }\n            return Util.findShadowRoot(element.parentNode);\n        }\n    };\n\n    //setTransitionEndSupport();\n    eventer.special.bsTransitionEnd = eventer.special.transitionEnd;\n\n    return Util;\n});\ndefine('skylark-bootstrap4/alert',[\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/plugins',\n    \"./bs4\",\n    './util'\n], function ($, plugins,bs4,Util) {\n\n    'use strict';\n    const NAME = 'alert';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.alert';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const DATA_API_KEY = '.data-api';\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const Selector = { DISMISS: '[data-dismiss=\"alert\"]' };\n    const Event = {\n        CLOSE: `close${ EVENT_KEY }`,\n        CLOSED: `closed${ EVENT_KEY }`,\n        CLICK_DATA_API: `click${ EVENT_KEY }${ DATA_API_KEY }`\n    };\n    const ClassName = {\n        ALERT: 'alert',\n        FADE: 'fade',\n        SHOW: 'show'\n    };\n    class Alert {\n        constructor(element) {\n            this._element = element;\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        close(element) {\n            let rootElement = this._element;\n            if (element) {\n                rootElement = this._getRootElement(element);\n            }\n            const customEvent = this._triggerCloseEvent(rootElement);\n            if (customEvent.isDefaultPrevented()) {\n                return;\n            }\n            this._removeElement(rootElement);\n        }\n        dispose() {\n            $.removeData(this._element, DATA_KEY);\n            this._element = null;\n        }\n        _getRootElement(element) {\n            const selector = Util.getSelectorFromElement(element);\n            let parent = false;\n            if (selector) {\n                parent = document.querySelector(selector);\n            }\n            if (!parent) {\n                parent = $(element).closest(`.${ ClassName.ALERT }`)[0];\n            }\n            return parent;\n        }\n        _triggerCloseEvent(element) {\n            const closeEvent = $.Event(Event.CLOSE);\n            $(element).trigger(closeEvent);\n            return closeEvent;\n        }\n        _removeElement(element) {\n            $(element).removeClass(ClassName.SHOW);\n            if (!$(element).hasClass(ClassName.FADE)) {\n                this._destroyElement(element);\n                return;\n            }\n            const transitionDuration = Util.getTransitionDurationFromElement(element);\n            $(element).one(Util.TRANSITION_END, event => this._destroyElement(element, event)).emulateTransitionEnd(transitionDuration);\n        }\n        _destroyElement(element) {\n            $(element).detach().trigger(Event.CLOSED).remove();\n        }\n        static _jqueryInterface(config) {\n            return this.each(function () {\n                const $element = $(this);\n                let data = $element.data(DATA_KEY);\n                if (!data) {\n                    data = new Alert(this);\n                    $element.data(DATA_KEY, data);\n                }\n                if (config === 'close') {\n                    data[config](this);\n                }\n            });\n        }\n        static _handleDismiss(alertInstance) {\n            return function (event) {\n                if (event) {\n                    event.preventDefault();\n                }\n                alertInstance.close(this);\n            };\n        }\n    }\n\n    $(document).on(Event.CLICK_DATA_API, Selector.DISMISS, Alert._handleDismiss(new Alert()));\n    $.fn[NAME] = Alert._jqueryInterface;\n    $.fn[NAME].Constructor = Alert;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return Alert._jqueryInterface;\n    };\n\n    return bs4.Alert = Alert;\n});\ndefine('skylark-bootstrap4/button',[\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/plugins',\n    \"./bs4\"\n], function ($, plugins,bs4) {\n    'use strict';\n    const NAME = 'button';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.button';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const DATA_API_KEY = '.data-api';\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const ClassName = {\n        ACTIVE: 'active',\n        BUTTON: 'btn',\n        FOCUS: 'focus'\n    };\n    const Selector = {\n        DATA_TOGGLE_CARROT: '[data-toggle^=\"button\"]',\n        DATA_TOGGLE: '[data-toggle=\"buttons\"]',\n        INPUT: 'input:not([type=\"hidden\"])',\n        ACTIVE: '.active',\n        BUTTON: '.btn'\n    };\n    const Event = {\n        CLICK_DATA_API: `click${ EVENT_KEY }${ DATA_API_KEY }`,\n        FOCUS_BLUR_DATA_API: `focus${ EVENT_KEY }${ DATA_API_KEY } ` + `blur${ EVENT_KEY }${ DATA_API_KEY }`\n    };\n    class Button {\n        constructor(element) {\n            this._element = element;\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        toggle() {\n            let triggerChangeEvent = true;\n            let addAriaPressed = true;\n            const rootElement = $(this._element).closest(Selector.DATA_TOGGLE)[0];\n            if (rootElement) {\n                const input = this._element.querySelector(Selector.INPUT);\n                if (input) {\n                    if (input.type === 'radio') {\n                        if (input.checked && this._element.classList.contains(ClassName.ACTIVE)) {\n                            triggerChangeEvent = false;\n                        } else {\n                            const activeElement = rootElement.querySelector(Selector.ACTIVE);\n                            if (activeElement) {\n                                $(activeElement).removeClass(ClassName.ACTIVE);\n                            }\n                        }\n                    }\n                    if (triggerChangeEvent) {\n                        if (input.hasAttribute('disabled') || rootElement.hasAttribute('disabled') || input.classList.contains('disabled') || rootElement.classList.contains('disabled')) {\n                            return;\n                        }\n                        input.checked = !this._element.classList.contains(ClassName.ACTIVE);\n                        $(input).trigger('change');\n                    }\n                    input.focus();\n                    addAriaPressed = false;\n                }\n            }\n            if (addAriaPressed) {\n                this._element.setAttribute('aria-pressed', !this._element.classList.contains(ClassName.ACTIVE));\n            }\n            if (triggerChangeEvent) {\n                $(this._element).toggleClass(ClassName.ACTIVE);\n            }\n        }\n        dispose() {\n            $.removeData(this._element, DATA_KEY);\n            this._element = null;\n        }\n        static _jqueryInterface(config) {\n            return this.each(function () {\n                let data = $(this).data(DATA_KEY);\n                if (!data) {\n                    data = new Button(this);\n                    $(this).data(DATA_KEY, data);\n                }\n                if (config === 'toggle') {\n                    data[config]();\n                }\n            });\n        }\n    }\n    $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, event => {\n        event.preventDefault();\n        let button = event.target;\n        if (!$(button).hasClass(ClassName.BUTTON)) {\n            button = $(button).closest(Selector.BUTTON);\n        }\n        Button._jqueryInterface.call($(button), 'toggle');\n    }).on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, event => {\n        const button = $(event.target).closest(Selector.BUTTON)[0];\n        $(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type));\n    });\n\n    $.fn[NAME] = Button._jqueryInterface;\n    $.fn[NAME].Constructor = Button;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return Button._jqueryInterface;\n    };\n\n\n    return bs4.Button = Button;\n});\ndefine('skylark-bootstrap4/carousel',[\n    'skylark-langx/langx',\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/plugins',\n    \"./bs4\",\n    './util'\n], function (langx,$, plugins,bs4,Util) {\n\n    'use strict';\n    const NAME = 'carousel';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.carousel';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const DATA_API_KEY = '.data-api';\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const ARROW_LEFT_KEYCODE = 37;\n    const ARROW_RIGHT_KEYCODE = 39;\n    const TOUCHEVENT_COMPAT_WAIT = 500;\n    const SWIPE_THRESHOLD = 40;\n    const Default = {\n        interval: 5000,\n        keyboard: true,\n        slide: false,\n        pause: 'hover',\n        wrap: true,\n        touch: true\n    };\n    const DefaultType = {\n        interval: '(number|boolean)',\n        keyboard: 'boolean',\n        slide: '(boolean|string)',\n        pause: '(string|boolean)',\n        wrap: 'boolean',\n        touch: 'boolean'\n    };\n    const Direction = {\n        NEXT: 'next',\n        PREV: 'prev',\n        LEFT: 'left',\n        RIGHT: 'right'\n    };\n    const Event = {\n        SLIDE: `slide${ EVENT_KEY }`,\n        SLID: `slid${ EVENT_KEY }`,\n        KEYDOWN: `keydown${ EVENT_KEY }`,\n        MOUSEENTER: `mouseenter${ EVENT_KEY }`,\n        MOUSELEAVE: `mouseleave${ EVENT_KEY }`,\n        TOUCHSTART: `touchstart${ EVENT_KEY }`,\n        TOUCHMOVE: `touchmove${ EVENT_KEY }`,\n        TOUCHEND: `touchend${ EVENT_KEY }`,\n        POINTERDOWN: `pointerdown${ EVENT_KEY }`,\n        POINTERUP: `pointerup${ EVENT_KEY }`,\n        DRAG_START: `dragstart${ EVENT_KEY }`,\n        LOAD_DATA_API: `load${ EVENT_KEY }${ DATA_API_KEY }`,\n        CLICK_DATA_API: `click${ EVENT_KEY }${ DATA_API_KEY }`\n    };\n    const ClassName = {\n        CAROUSEL: 'carousel',\n        ACTIVE: 'active',\n        SLIDE: 'slide',\n        RIGHT: 'carousel-item-right',\n        LEFT: 'carousel-item-left',\n        NEXT: 'carousel-item-next',\n        PREV: 'carousel-item-prev',\n        ITEM: 'carousel-item',\n        POINTER_EVENT: 'pointer-event'\n    };\n    const Selector = {\n        ACTIVE: '.active',\n        ACTIVE_ITEM: '.active.carousel-item',\n        ITEM: '.carousel-item',\n        ITEM_IMG: '.carousel-item img',\n        NEXT_PREV: '.carousel-item-next, .carousel-item-prev',\n        INDICATORS: '.carousel-indicators',\n        DATA_SLIDE: '[data-slide], [data-slide-to]',\n        DATA_RIDE: '[data-ride=\"carousel\"]'\n    };\n    const PointerType = {\n        TOUCH: 'touch',\n        PEN: 'pen'\n    };\n    class Carousel {\n        constructor(element, config) {\n            this._items = null;\n            this._interval = null;\n            this._activeElement = null;\n            this._isPaused = false;\n            this._isSliding = false;\n            this.touchTimeout = null;\n            this.touchStartX = 0;\n            this.touchDeltaX = 0;\n            this._config = this._getConfig(config);\n            this._element = element;\n            this._indicatorsElement = this._element.querySelector(Selector.INDICATORS);\n            this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;\n            this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent);\n            this._addEventListeners();\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        static get Default() {\n            return Default;\n        }\n        next() {\n            if (!this._isSliding) {\n                this._slide(Direction.NEXT);\n            }\n        }\n        nextWhenVisible() {\n            if (!document.hidden && ($(this._element).is(':visible') && $(this._element).css('visibility') !== 'hidden')) {\n                this.next();\n            }\n        }\n        prev() {\n            if (!this._isSliding) {\n                this._slide(Direction.PREV);\n            }\n        }\n        pause(event) {\n            if (!event) {\n                this._isPaused = true;\n            }\n            if (this._element.querySelector(Selector.NEXT_PREV)) {\n                Util.triggerTransitionEnd(this._element);\n                this.cycle(true);\n            }\n            clearInterval(this._interval);\n            this._interval = null;\n        }\n        cycle(event) {\n            if (!event) {\n                this._isPaused = false;\n            }\n            if (this._interval) {\n                clearInterval(this._interval);\n                this._interval = null;\n            }\n            if (this._config.interval && !this._isPaused) {\n                this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);\n            }\n        }\n        to(index) {\n            this._activeElement = this._element.querySelector(Selector.ACTIVE_ITEM);\n            const activeIndex = this._getItemIndex(this._activeElement);\n            if (index > this._items.length - 1 || index < 0) {\n                return;\n            }\n            if (this._isSliding) {\n                $(this._element).one(Event.SLID, () => this.to(index));\n                return;\n            }\n            if (activeIndex === index) {\n                this.pause();\n                this.cycle();\n                return;\n            }\n            const direction = index > activeIndex ? Direction.NEXT : Direction.PREV;\n            this._slide(direction, this._items[index]);\n        }\n        dispose() {\n            $(this._element).off(EVENT_KEY);\n            $.removeData(this._element, DATA_KEY);\n            this._items = null;\n            this._config = null;\n            this._element = null;\n            this._interval = null;\n            this._isPaused = null;\n            this._isSliding = null;\n            this._activeElement = null;\n            this._indicatorsElement = null;\n        }\n        _getConfig(config) {\n            //config = {\n            //    ...Default,\n            //    ...config\n            //};\n            config = langx.mixin({},Default,config);\n            Util.typeCheckConfig(NAME, config, DefaultType);\n            return config;\n        }\n        _handleSwipe() {\n            const absDeltax = Math.abs(this.touchDeltaX);\n            if (absDeltax <= SWIPE_THRESHOLD) {\n                return;\n            }\n            const direction = absDeltax / this.touchDeltaX;\n            if (direction > 0) {\n                this.prev();\n            }\n            if (direction < 0) {\n                this.next();\n            }\n        }\n        _addEventListeners() {\n            if (this._config.keyboard) {\n                $(this._element).on(Event.KEYDOWN, event => this._keydown(event));\n            }\n            if (this._config.pause === 'hover') {\n                $(this._element).on(Event.MOUSEENTER, event => this.pause(event)).on(Event.MOUSELEAVE, event => this.cycle(event));\n            }\n            this._addTouchEventListeners();\n        }\n        _addTouchEventListeners() {\n            if (!this._touchSupported) {\n                return;\n            }\n            const start = event => {\n                if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n                    this.touchStartX = event.originalEvent.clientX;\n                } else if (!this._pointerEvent) {\n                    this.touchStartX = event.originalEvent.touches[0].clientX;\n                }\n            };\n            const move = event => {\n                if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {\n                    this.touchDeltaX = 0;\n                } else {\n                    this.touchDeltaX = event.originalEvent.touches[0].clientX - this.touchStartX;\n                }\n            };\n            const end = event => {\n                if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n                    this.touchDeltaX = event.originalEvent.clientX - this.touchStartX;\n                }\n                this._handleSwipe();\n                if (this._config.pause === 'hover') {\n                    this.pause();\n                    if (this.touchTimeout) {\n                        clearTimeout(this.touchTimeout);\n                    }\n                    this.touchTimeout = setTimeout(event => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval);\n                }\n            };\n            $(this._element.querySelectorAll(Selector.ITEM_IMG)).on(Event.DRAG_START, e => e.preventDefault());\n            if (this._pointerEvent) {\n                $(this._element).on(Event.POINTERDOWN, event => start(event));\n                $(this._element).on(Event.POINTERUP, event => end(event));\n                this._element.classList.add(ClassName.POINTER_EVENT);\n            } else {\n                $(this._element).on(Event.TOUCHSTART, event => start(event));\n                $(this._element).on(Event.TOUCHMOVE, event => move(event));\n                $(this._element).on(Event.TOUCHEND, event => end(event));\n            }\n        }\n        _keydown(event) {\n            if (/input|textarea/i.test(event.target.tagName)) {\n                return;\n            }\n            switch (event.which) {\n            case ARROW_LEFT_KEYCODE:\n                event.preventDefault();\n                this.prev();\n                break;\n            case ARROW_RIGHT_KEYCODE:\n                event.preventDefault();\n                this.next();\n                break;\n            default:\n            }\n        }\n        _getItemIndex(element) {\n            this._items = element && element.parentNode ? [].slice.call(element.parentNode.querySelectorAll(Selector.ITEM)) : [];\n            return this._items.indexOf(element);\n        }\n        _getItemByDirection(direction, activeElement) {\n            const isNextDirection = direction === Direction.NEXT;\n            const isPrevDirection = direction === Direction.PREV;\n            const activeIndex = this._getItemIndex(activeElement);\n            const lastItemIndex = this._items.length - 1;\n            const isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;\n            if (isGoingToWrap && !this._config.wrap) {\n                return activeElement;\n            }\n            const delta = direction === Direction.PREV ? -1 : 1;\n            const itemIndex = (activeIndex + delta) % this._items.length;\n            return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];\n        }\n        _triggerSlideEvent(relatedTarget, eventDirectionName) {\n            const targetIndex = this._getItemIndex(relatedTarget);\n            const fromIndex = this._getItemIndex(this._element.querySelector(Selector.ACTIVE_ITEM));\n            const slideEvent = $.Event(Event.SLIDE, {\n                relatedTarget,\n                direction: eventDirectionName,\n                from: fromIndex,\n                to: targetIndex\n            });\n            $(this._element).trigger(slideEvent);\n            return slideEvent;\n        }\n        _setActiveIndicatorElement(element) {\n            if (this._indicatorsElement) {\n                const indicators = [].slice.call(this._indicatorsElement.querySelectorAll(Selector.ACTIVE));\n                $(indicators).removeClass(ClassName.ACTIVE);\n                const nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];\n                if (nextIndicator) {\n                    $(nextIndicator).addClass(ClassName.ACTIVE);\n                }\n            }\n        }\n        _slide(direction, element) {\n            const activeElement = this._element.querySelector(Selector.ACTIVE_ITEM);\n            const activeElementIndex = this._getItemIndex(activeElement);\n            const nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);\n            const nextElementIndex = this._getItemIndex(nextElement);\n            const isCycling = Boolean(this._interval);\n            let directionalClassName;\n            let orderClassName;\n            let eventDirectionName;\n            if (direction === Direction.NEXT) {\n                directionalClassName = ClassName.LEFT;\n                orderClassName = ClassName.NEXT;\n                eventDirectionName = Direction.LEFT;\n            } else {\n                directionalClassName = ClassName.RIGHT;\n                orderClassName = ClassName.PREV;\n                eventDirectionName = Direction.RIGHT;\n            }\n            if (nextElement && $(nextElement).hasClass(ClassName.ACTIVE)) {\n                this._isSliding = false;\n                return;\n            }\n            const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);\n            if (slideEvent.isDefaultPrevented()) {\n                return;\n            }\n            if (!activeElement || !nextElement) {\n                return;\n            }\n            this._isSliding = true;\n            if (isCycling) {\n                this.pause();\n            }\n            this._setActiveIndicatorElement(nextElement);\n            const slidEvent = $.Event(Event.SLID, {\n                relatedTarget: nextElement,\n                direction: eventDirectionName,\n                from: activeElementIndex,\n                to: nextElementIndex\n            });\n            if ($(this._element).hasClass(ClassName.SLIDE)) {\n                $(nextElement).addClass(orderClassName);\n                Util.reflow(nextElement);\n                $(activeElement).addClass(directionalClassName);\n                $(nextElement).addClass(directionalClassName);\n                const nextElementInterval = parseInt(nextElement.getAttribute('data-interval'), 10);\n                if (nextElementInterval) {\n                    this._config.defaultInterval = this._config.defaultInterval || this._config.interval;\n                    this._config.interval = nextElementInterval;\n                } else {\n                    this._config.interval = this._config.defaultInterval || this._config.interval;\n                }\n                const transitionDuration = Util.getTransitionDurationFromElement(activeElement);\n                $(activeElement).one(Util.TRANSITION_END, () => {\n                    $(nextElement).removeClass(`${ directionalClassName } ${ orderClassName }`).addClass(ClassName.ACTIVE);\n                    $(activeElement).removeClass(`${ ClassName.ACTIVE } ${ orderClassName } ${ directionalClassName }`);\n                    this._isSliding = false;\n                    setTimeout(() => $(this._element).trigger(slidEvent), 0);\n                }).emulateTransitionEnd(transitionDuration);\n            } else {\n                $(activeElement).removeClass(ClassName.ACTIVE);\n                $(nextElement).addClass(ClassName.ACTIVE);\n                this._isSliding = false;\n                $(this._element).trigger(slidEvent);\n            }\n            if (isCycling) {\n                this.cycle();\n            }\n        }\n        static _jqueryInterface(config) {\n            return this.each(function () {\n                let data = $(this).data(DATA_KEY);\n                //let _config = {\n                //    ...Default,\n                //    ...$(this).data()\n                //};\n                let _config = langx.mixin({},Default,$(this).data());\n                if (typeof config === 'object') {\n                    //_config = {\n                    //    ..._config,\n                    //    ...config\n                    //};\n                    langx.mixin(_config,config);\n                }\n                const action = typeof config === 'string' ? config : _config.slide;\n                if (!data) {\n                    data = new Carousel(this, _config);\n                    $(this).data(DATA_KEY, data);\n                }\n                if (typeof config === 'number') {\n                    data.to(config);\n                } else if (typeof action === 'string') {\n                    if (typeof data[action] === 'undefined') {\n                        throw new TypeError(`No method named \"${ action }\"`);\n                    }\n                    data[action]();\n                } else if (_config.interval) {\n                    data.pause();\n                    data.cycle();\n                }\n            });\n        }\n        static _dataApiClickHandler(event) {\n            const selector = Util.getSelectorFromElement(this);\n            if (!selector) {\n                return;\n            }\n            const target = $(selector)[0];\n            if (!target || !$(target).hasClass(ClassName.CAROUSEL)) {\n                return;\n            }\n            //const config = {\n            //    ...$(target).data(),\n            //    ...$(this).data()\n            //};\n            const config = langx.mixin({},$(target).data(),$(this).data());\n            const slideIndex = this.getAttribute('data-slide-to');\n            if (slideIndex) {\n                config.interval = false;\n            }\n            Carousel._jqueryInterface.call($(target), config);\n            if (slideIndex) {\n                $(target).data(DATA_KEY).to(slideIndex);\n            }\n            event.preventDefault();\n        }\n    }\n    $(document).on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler);\n    $(window).on(Event.LOAD_DATA_API, () => {\n        const carousels = [].slice.call(document.querySelectorAll(Selector.DATA_RIDE));\n        for (let i = 0, len = carousels.length; i < len; i++) {\n            const $carousel = $(carousels[i]);\n            Carousel._jqueryInterface.call($carousel, $carousel.data());\n        }\n    });\n    $.fn[NAME] = Carousel._jqueryInterface;\n    $.fn[NAME].Constructor = Carousel;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return Carousel._jqueryInterface;\n    };\n    return Carousel;\n});\ndefine('skylark-bootstrap4/collapse',[\n    'skylark-langx/langx',\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/plugins',\n    \"./bs4\",\n    './util'\n], function (langx,$, plugins,bs4,Util) {\n\n    'use strict';\n    const NAME = 'collapse';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.collapse';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const DATA_API_KEY = '.data-api';\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const Default = {\n        toggle: true,\n        parent: ''\n    };\n    const DefaultType = {\n        toggle: 'boolean',\n        parent: '(string|element)'\n    };\n    const Event = {\n        SHOW: `show${ EVENT_KEY }`,\n        SHOWN: `shown${ EVENT_KEY }`,\n        HIDE: `hide${ EVENT_KEY }`,\n        HIDDEN: `hidden${ EVENT_KEY }`,\n        CLICK_DATA_API: `click${ EVENT_KEY }${ DATA_API_KEY }`\n    };\n    const ClassName = {\n        SHOW: 'show',\n        COLLAPSE: 'collapse',\n        COLLAPSING: 'collapsing',\n        COLLAPSED: 'collapsed'\n    };\n    const Dimension = {\n        WIDTH: 'width',\n        HEIGHT: 'height'\n    };\n    const Selector = {\n        ACTIVES: '.show, .collapsing',\n        DATA_TOGGLE: '[data-toggle=\"collapse\"]'\n    };\n    class Collapse {\n        constructor(element, config) {\n            this._isTransitioning = false;\n            this._element = element;\n            this._config = this._getConfig(config);\n            this._triggerArray = [].slice.call(document.querySelectorAll(`[data-toggle=\"collapse\"][href=\"#${ element.id }\"],` + `[data-toggle=\"collapse\"][data-target=\"#${ element.id }\"]`));\n            const toggleList = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE));\n            for (let i = 0, len = toggleList.length; i < len; i++) {\n                const elem = toggleList[i];\n                const selector = Util.getSelectorFromElement(elem);\n                const filterElement = [].slice.call(document.querySelectorAll(selector)).filter(foundElem => foundElem === element);\n                if (selector !== null && filterElement.length > 0) {\n                    this._selector = selector;\n                    this._triggerArray.push(elem);\n                }\n            }\n            this._parent = this._config.parent ? this._getParent() : null;\n            if (!this._config.parent) {\n                this._addAriaAndCollapsedClass(this._element, this._triggerArray);\n            }\n            if (this._config.toggle) {\n                this.toggle();\n            }\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        static get Default() {\n            return Default;\n        }\n        toggle() {\n            if ($(this._element).hasClass(ClassName.SHOW)) {\n                this.hide();\n            } else {\n                this.show();\n            }\n        }\n        show() {\n            if (this._isTransitioning || $(this._element).hasClass(ClassName.SHOW)) {\n                return;\n            }\n            let actives;\n            let activesData;\n            if (this._parent) {\n                actives = [].slice.call(this._parent.querySelectorAll(Selector.ACTIVES)).filter(elem => {\n                    if (typeof this._config.parent === 'string') {\n                        return elem.getAttribute('data-parent') === this._config.parent;\n                    }\n                    return elem.classList.contains(ClassName.COLLAPSE);\n                });\n                if (actives.length === 0) {\n                    actives = null;\n                }\n            }\n            if (actives) {\n                activesData = $(actives).not(this._selector).data(DATA_KEY);\n                if (activesData && activesData._isTransitioning) {\n                    return;\n                }\n            }\n            const startEvent = $.Event(Event.SHOW);\n            $(this._element).trigger(startEvent);\n            if (startEvent.isDefaultPrevented()) {\n                return;\n            }\n            if (actives) {\n                Collapse._jqueryInterface.call($(actives).not(this._selector), 'hide');\n                if (!activesData) {\n                    $(actives).data(DATA_KEY, null);\n                }\n            }\n            const dimension = this._getDimension();\n            $(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);\n            this._element.style[dimension] = 0;\n            if (this._triggerArray.length) {\n                $(this._triggerArray).removeClass(ClassName.COLLAPSED).attr('aria-expanded', true);\n            }\n            this.setTransitioning(true);\n            const complete = () => {\n                $(this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.SHOW);\n                this._element.style[dimension] = '';\n                this.setTransitioning(false);\n                $(this._element).trigger(Event.SHOWN);\n            };\n            const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n            const scrollSize = `scroll${ capitalizedDimension }`;\n            const transitionDuration = Util.getTransitionDurationFromElement(this._element);\n            $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n            this._element.style[dimension] = `${ this._element[scrollSize] }px`;\n        }\n        hide() {\n            if (this._isTransitioning || !$(this._element).hasClass(ClassName.SHOW)) {\n                return;\n            }\n            const startEvent = $.Event(Event.HIDE);\n            $(this._element).trigger(startEvent);\n            if (startEvent.isDefaultPrevented()) {\n                return;\n            }\n            const dimension = this._getDimension();\n            this._element.style[dimension] = `${ this._element.getBoundingClientRect()[dimension] }px`;\n            Util.reflow(this._element);\n            $(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.SHOW);\n            const triggerArrayLength = this._triggerArray.length;\n            if (triggerArrayLength > 0) {\n                for (let i = 0; i < triggerArrayLength; i++) {\n                    const trigger = this._triggerArray[i];\n                    const selector = Util.getSelectorFromElement(trigger);\n                    if (selector !== null) {\n                        const $elem = $([].slice.call(document.querySelectorAll(selector)));\n                        if (!$elem.hasClass(ClassName.SHOW)) {\n                            $(trigger).addClass(ClassName.COLLAPSED).attr('aria-expanded', false);\n                        }\n                    }\n                }\n            }\n            this.setTransitioning(true);\n            const complete = () => {\n                this.setTransitioning(false);\n                $(this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);\n            };\n            this._element.style[dimension] = '';\n            const transitionDuration = Util.getTransitionDurationFromElement(this._element);\n            $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n        }\n        setTransitioning(isTransitioning) {\n            this._isTransitioning = isTransitioning;\n        }\n        dispose() {\n            $.removeData(this._element, DATA_KEY);\n            this._config = null;\n            this._parent = null;\n            this._element = null;\n            this._triggerArray = null;\n            this._isTransitioning = null;\n        }\n        _getConfig(config) {\n            //config = {\n            //    ...Default,\n            //    ...config\n            //};\n            config = langx.mixin({},Default,config);\n            config.toggle = Boolean(config.toggle);\n            Util.typeCheckConfig(NAME, config, DefaultType);\n            return config;\n        }\n        _getDimension() {\n            const hasWidth = $(this._element).hasClass(Dimension.WIDTH);\n            return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;\n        }\n        _getParent() {\n            let parent;\n            if (Util.isElement(this._config.parent)) {\n                parent = this._config.parent;\n                if (typeof this._config.parent.skylark-utils-dom/query !== 'undefined') {\n                    parent = this._config.parent[0];\n                }\n            } else {\n                parent = document.querySelector(this._config.parent);\n            }\n            const selector = `[data-toggle=\"collapse\"][data-parent=\"${ this._config.parent }\"]`;\n            const children = [].slice.call(parent.querySelectorAll(selector));\n            $(children).each((i, element) => {\n                this._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);\n            });\n            return parent;\n        }\n        _addAriaAndCollapsedClass(element, triggerArray) {\n            const isOpen = $(element).hasClass(ClassName.SHOW);\n            if (triggerArray.length) {\n                $(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);\n            }\n        }\n        static _getTargetFromElement(element) {\n            const selector = Util.getSelectorFromElement(element);\n            return selector ? document.querySelector(selector) : null;\n        }\n        static _jqueryInterface(config) {\n            return this.each(function () {\n                const $this = $(this);\n                let data = $this.data(DATA_KEY);\n                //const _config = {\n                //    ...Default,\n                //    ...$this.data(),\n                //    ...typeof config === 'object' && config ? config : {}\n                //};\n                const _config = langx.mixin({},Default,$this.data(),typeof config === 'object' && config ? config : {});\n\n                if (!data && _config.toggle && /show|hide/.test(config)) {\n                    _config.toggle = false;\n                }\n                if (!data) {\n                    data = new Collapse(this, _config);\n                    $this.data(DATA_KEY, data);\n                }\n                if (typeof config === 'string') {\n                    if (typeof data[config] === 'undefined') {\n                        throw new TypeError(`No method named \"${ config }\"`);\n                    }\n                    data[config]();\n                }\n            });\n        }\n    }\n    $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n        if (event.currentTarget.tagName === 'A') {\n            event.preventDefault();\n        }\n        const $trigger = $(this);\n        const selector = Util.getSelectorFromElement(this);\n        const selectors = [].slice.call(document.querySelectorAll(selector));\n        $(selectors).each(function () {\n            const $target = $(this);\n            const data = $target.data(DATA_KEY);\n            const config = data ? 'toggle' : $trigger.data();\n            Collapse._jqueryInterface.call($target, config);\n        });\n    });\n    $.fn[NAME] = Collapse._jqueryInterface;\n    $.fn[NAME].Constructor = Collapse;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return Collapse._jqueryInterface;\n    };\n    return Collapse;\n});\ndefine('skylark-bootstrap4/dropdown',[\n    'skylark-langx/langx',\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/plugins',\n    \"./bs4\",\n    'skylark-ui-popper/Popper',\n    './util'\n], function (langx,$, plugins,bs4,Popper,Util) {\n    'use strict';\n    const NAME = 'dropdown';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.dropdown';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const DATA_API_KEY = '.data-api';\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const ESCAPE_KEYCODE = 27;\n    const SPACE_KEYCODE = 32;\n    const TAB_KEYCODE = 9;\n    const ARROW_UP_KEYCODE = 38;\n    const ARROW_DOWN_KEYCODE = 40;\n    const RIGHT_MOUSE_BUTTON_WHICH = 3;\n    const REGEXP_KEYDOWN = new RegExp(`${ ARROW_UP_KEYCODE }|${ ARROW_DOWN_KEYCODE }|${ ESCAPE_KEYCODE }`);\n    const Event = {\n        HIDE: `hide${ EVENT_KEY }`,\n        HIDDEN: `hidden${ EVENT_KEY }`,\n        SHOW: `show${ EVENT_KEY }`,\n        SHOWN: `shown${ EVENT_KEY }`,\n        CLICK: `click${ EVENT_KEY }`,\n        CLICK_DATA_API: `click${ EVENT_KEY }${ DATA_API_KEY }`,\n        KEYDOWN_DATA_API: `keydown${ EVENT_KEY }${ DATA_API_KEY }`,\n        KEYUP_DATA_API: `keyup${ EVENT_KEY }${ DATA_API_KEY }`\n    };\n    const ClassName = {\n        DISABLED: 'disabled',\n        SHOW: 'show',\n        DROPUP: 'dropup',\n        DROPRIGHT: 'dropright',\n        DROPLEFT: 'dropleft',\n        MENURIGHT: 'dropdown-menu-right',\n        MENULEFT: 'dropdown-menu-left',\n        POSITION_STATIC: 'position-static'\n    };\n    const Selector = {\n        DATA_TOGGLE: '[data-toggle=\"dropdown\"]',\n        FORM_CHILD: '.dropdown form',\n        MENU: '.dropdown-menu',\n        NAVBAR_NAV: '.navbar-nav',\n        VISIBLE_ITEMS: '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'\n    };\n    const AttachmentMap = {\n        TOP: 'top-start',\n        TOPEND: 'top-end',\n        BOTTOM: 'bottom-start',\n        BOTTOMEND: 'bottom-end',\n        RIGHT: 'right-start',\n        RIGHTEND: 'right-end',\n        LEFT: 'left-start',\n        LEFTEND: 'left-end'\n    };\n    const Default = {\n        offset: 0,\n        flip: true,\n        boundary: 'scrollParent',\n        reference: 'toggle',\n        display: 'dynamic'\n    };\n    const DefaultType = {\n        offset: '(number|string|function)',\n        flip: 'boolean',\n        boundary: '(string|element)',\n        reference: '(string|element)',\n        display: 'string'\n    };\n    class Dropdown {\n        constructor(element, config) {\n            this._element = element;\n            this._popper = null;\n            this._config = this._getConfig(config);\n            this._menu = this._getMenuElement();\n            this._inNavbar = this._detectNavbar();\n            this._addEventListeners();\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        static get Default() {\n            return Default;\n        }\n        static get DefaultType() {\n            return DefaultType;\n        }\n        toggle() {\n            if (this._element.disabled || $(this._element).hasClass(ClassName.DISABLED)) {\n                return;\n            }\n            const parent = Dropdown._getParentFromElement(this._element);\n            const isActive = $(this._menu).hasClass(ClassName.SHOW);\n            Dropdown._clearMenus();\n            if (isActive) {\n                return;\n            }\n            const relatedTarget = { relatedTarget: this._element };\n            const showEvent = $.Event(Event.SHOW, relatedTarget);\n            $(parent).trigger(showEvent);\n            if (showEvent.isDefaultPrevented()) {\n                return;\n            }\n            if (!this._inNavbar) {\n                if (typeof Popper === 'undefined') {\n                    throw new TypeError(\"Bootstrap's dropdowns require skylark-ui-popper/Popper (https://skylark-ui-popper/Popper.org/)\");\n                }\n                let referenceElement = this._element;\n                if (this._config.reference === 'parent') {\n                    referenceElement = parent;\n                } else if (Util.isElement(this._config.reference)) {\n                    referenceElement = this._config.reference;\n                    if (typeof this._config.reference.skylark-utils-dom/query !== 'undefined') {\n                        referenceElement = this._config.reference[0];\n                    }\n                }\n                if (this._config.boundary !== 'scrollParent') {\n                    $(parent).addClass(ClassName.POSITION_STATIC);\n                }\n                this._popper = new Popper(referenceElement, this._menu, this._getPopperConfig());\n            }\n            if ('ontouchstart' in document.documentElement && $(parent).closest(Selector.NAVBAR_NAV).length === 0) {\n                $(document.body).children().on('mouseover', null, $.noop);\n            }\n            this._element.focus();\n            this._element.setAttribute('aria-expanded', true);\n            $(this._menu).toggleClass(ClassName.SHOW);\n            $(parent).toggleClass(ClassName.SHOW).trigger($.Event(Event.SHOWN, relatedTarget));\n        }\n        show() {\n            if (this._element.disabled || $(this._element).hasClass(ClassName.DISABLED) || $(this._menu).hasClass(ClassName.SHOW)) {\n                return;\n            }\n            const relatedTarget = { relatedTarget: this._element };\n            const showEvent = $.Event(Event.SHOW, relatedTarget);\n            const parent = Dropdown._getParentFromElement(this._element);\n            $(parent).trigger(showEvent);\n            if (showEvent.isDefaultPrevented()) {\n                return;\n            }\n            $(this._menu).toggleClass(ClassName.SHOW);\n            $(parent).toggleClass(ClassName.SHOW).trigger($.Event(Event.SHOWN, relatedTarget));\n        }\n        hide() {\n            if (this._element.disabled || $(this._element).hasClass(ClassName.DISABLED) || !$(this._menu).hasClass(ClassName.SHOW)) {\n                return;\n            }\n            const relatedTarget = { relatedTarget: this._element };\n            const hideEvent = $.Event(Event.HIDE, relatedTarget);\n            const parent = Dropdown._getParentFromElement(this._element);\n            $(parent).trigger(hideEvent);\n            if (hideEvent.isDefaultPrevented()) {\n                return;\n            }\n            $(this._menu).toggleClass(ClassName.SHOW);\n            $(parent).toggleClass(ClassName.SHOW).trigger($.Event(Event.HIDDEN, relatedTarget));\n        }\n        dispose() {\n            $.removeData(this._element, DATA_KEY);\n            $(this._element).off(EVENT_KEY);\n            this._element = null;\n            this._menu = null;\n            if (this._popper !== null) {\n                this._popper.destroy();\n                this._popper = null;\n            }\n        }\n        update() {\n            this._inNavbar = this._detectNavbar();\n            if (this._popper !== null) {\n                this._popper.scheduleUpdate();\n            }\n        }\n        _addEventListeners() {\n            $(this._element).on(Event.CLICK, event => {\n                event.preventDefault();\n                event.stopPropagation();\n                this.toggle();\n            });\n        }\n        _getConfig(config) {\n            //config = {\n            //    ...this.constructor.Default,\n            //    ...$(this._element).data(),\n            //    ...config\n            //};\n            config = langx.mixin({},this.constructor.Default,$(this._element).data(),config);\n            Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\n            return config;\n        }\n        _getMenuElement() {\n            if (!this._menu) {\n                const parent = Dropdown._getParentFromElement(this._element);\n                if (parent) {\n                    this._menu = parent.querySelector(Selector.MENU);\n                }\n            }\n            return this._menu;\n        }\n        _getPlacement() {\n            const $parentDropdown = $(this._element.parentNode);\n            let placement = AttachmentMap.BOTTOM;\n            if ($parentDropdown.hasClass(ClassName.DROPUP)) {\n                placement = AttachmentMap.TOP;\n                if ($(this._menu).hasClass(ClassName.MENURIGHT)) {\n                    placement = AttachmentMap.TOPEND;\n                }\n            } else if ($parentDropdown.hasClass(ClassName.DROPRIGHT)) {\n                placement = AttachmentMap.RIGHT;\n            } else if ($parentDropdown.hasClass(ClassName.DROPLEFT)) {\n                placement = AttachmentMap.LEFT;\n            } else if ($(this._menu).hasClass(ClassName.MENURIGHT)) {\n                placement = AttachmentMap.BOTTOMEND;\n            }\n            return placement;\n        }\n        _detectNavbar() {\n            return $(this._element).closest('.navbar').length > 0;\n        }\n        _getPopperConfig() {\n            const offsetConf = {};\n            if (typeof this._config.offset === 'function') {\n                offsetConf.fn = data => {\n                    //data.offsets = {\n                    //    ...data.offsets,\n                    //    ...this._config.offset(data.offsets) || {}\n                    //};\n                    langx.mixin(data.offsets,this._config.offset(data.offsets) || {});\n                    return data;\n                };\n            } else {\n                offsetConf.offset = this._config.offset;\n            }\n            const popperConfig = {\n                placement: this._getPlacement(),\n                modifiers: {\n                    offset: offsetConf,\n                    flip: { enabled: this._config.flip },\n                    preventOverflow: { boundariesElement: this._config.boundary }\n                }\n            };\n            if (this._config.display === 'static') {\n                popperConfig.modifiers.applyStyle = { enabled: false };\n            }\n            return popperConfig;\n        }\n        static _jqueryInterface(config) {\n            return this.each(function () {\n                let data = $(this).data(DATA_KEY);\n                const _config = typeof config === 'object' ? config : null;\n                if (!data) {\n                    data = new Dropdown(this, _config);\n                    $(this).data(DATA_KEY, data);\n                }\n                if (typeof config === 'string') {\n                    if (typeof data[config] === 'undefined') {\n                        throw new TypeError(`No method named \"${ config }\"`);\n                    }\n                    data[config]();\n                }\n            });\n        }\n        static _clearMenus(event) {\n            if (event && (event.which === RIGHT_MOUSE_BUTTON_WHICH || event.type === 'keyup' && event.which !== TAB_KEYCODE)) {\n                return;\n            }\n            const toggles = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE));\n            for (let i = 0, len = toggles.length; i < len; i++) {\n                const parent = Dropdown._getParentFromElement(toggles[i]);\n                const context = $(toggles[i]).data(DATA_KEY);\n                const relatedTarget = { relatedTarget: toggles[i] };\n                if (event && event.type === 'click') {\n                    relatedTarget.clickEvent = event;\n                }\n                if (!context) {\n                    continue;\n                }\n                const dropdownMenu = context._menu;\n                if (!$(parent).hasClass(ClassName.SHOW)) {\n                    continue;\n                }\n                if (event && (event.type === 'click' && /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.which === TAB_KEYCODE) && $.contains(parent, event.target)) {\n                    continue;\n                }\n                const hideEvent = $.Event(Event.HIDE, relatedTarget);\n                $(parent).trigger(hideEvent);\n                if (hideEvent.isDefaultPrevented()) {\n                    continue;\n                }\n                if ('ontouchstart' in document.documentElement) {\n                    $(document.body).children().off('mouseover', null, $.noop);\n                }\n                toggles[i].setAttribute('aria-expanded', 'false');\n                $(dropdownMenu).removeClass(ClassName.SHOW);\n                $(parent).removeClass(ClassName.SHOW).trigger($.Event(Event.HIDDEN, relatedTarget));\n            }\n        }\n        static _getParentFromElement(element) {\n            let parent;\n            const selector = Util.getSelectorFromElement(element);\n            if (selector) {\n                parent = document.querySelector(selector);\n            }\n            return parent || element.parentNode;\n        }\n        static _dataApiKeydownHandler(event) {\n            if (/input|textarea/i.test(event.target.tagName) ? event.which === SPACE_KEYCODE || event.which !== ESCAPE_KEYCODE && (event.which !== ARROW_DOWN_KEYCODE && event.which !== ARROW_UP_KEYCODE || $(event.target).closest(Selector.MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {\n                return;\n            }\n            event.preventDefault();\n            event.stopPropagation();\n            if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {\n                return;\n            }\n            const parent = Dropdown._getParentFromElement(this);\n            const isActive = $(parent).hasClass(ClassName.SHOW);\n            if (!isActive || isActive && (event.which === ESCAPE_KEYCODE || event.which === SPACE_KEYCODE)) {\n                if (event.which === ESCAPE_KEYCODE) {\n                    const toggle = parent.querySelector(Selector.DATA_TOGGLE);\n                    $(toggle).trigger('focus');\n                }\n                $(this).trigger('click');\n                return;\n            }\n            const items = [].slice.call(parent.querySelectorAll(Selector.VISIBLE_ITEMS));\n            if (items.length === 0) {\n                return;\n            }\n            let index = items.indexOf(event.target);\n            if (event.which === ARROW_UP_KEYCODE && index > 0) {\n                index--;\n            }\n            if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {\n                index++;\n            }\n            if (index < 0) {\n                index = 0;\n            }\n            items[index].focus();\n        }\n    }\n    $(document).on(Event.KEYDOWN_DATA_API, Selector.DATA_TOGGLE, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.MENU, Dropdown._dataApiKeydownHandler).on(`${ Event.CLICK_DATA_API } ${ Event.KEYUP_DATA_API }`, Dropdown._clearMenus).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n        Dropdown._jqueryInterface.call($(this), 'toggle');\n    }).on(Event.CLICK_DATA_API, Selector.FORM_CHILD, e => {\n        e.stopPropagation();\n    });\n    $.fn[NAME] = Dropdown._jqueryInterface;\n    $.fn[NAME].Constructor = Dropdown;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return Dropdown._jqueryInterface;\n    };\n    return Dropdown;\n});\ndefine('skylark-bootstrap4/modal',[\n    'skylark-langx/langx',\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/plugins',\n    \"./bs4\",\n    './util'\n], function (langx,$, plugins,bs4,Util) {\n\n    'use strict';\n    const NAME = 'modal';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.modal';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const DATA_API_KEY = '.data-api';\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const ESCAPE_KEYCODE = 27;\n    const Default = {\n        backdrop: true,\n        keyboard: true,\n        focus: true,\n        show: true\n    };\n    const DefaultType = {\n        backdrop: '(boolean|string)',\n        keyboard: 'boolean',\n        focus: 'boolean',\n        show: 'boolean'\n    };\n    const Event = {\n        HIDE: `hide${ EVENT_KEY }`,\n        HIDDEN: `hidden${ EVENT_KEY }`,\n        SHOW: `show${ EVENT_KEY }`,\n        SHOWN: `shown${ EVENT_KEY }`,\n        FOCUSIN: `focusin${ EVENT_KEY }`,\n        RESIZE: `resize${ EVENT_KEY }`,\n        CLICK_DISMISS: `click.dismiss${ EVENT_KEY }`,\n        KEYDOWN_DISMISS: `keydown.dismiss${ EVENT_KEY }`,\n        MOUSEUP_DISMISS: `mouseup.dismiss${ EVENT_KEY }`,\n        MOUSEDOWN_DISMISS: `mousedown.dismiss${ EVENT_KEY }`,\n        CLICK_DATA_API: `click${ EVENT_KEY }${ DATA_API_KEY }`\n    };\n    const ClassName = {\n        SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n        BACKDROP: 'modal-backdrop',\n        OPEN: 'modal-open',\n        FADE: 'fade',\n        SHOW: 'show'\n    };\n    const Selector = {\n        DIALOG: '.modal-dialog',\n        DATA_TOGGLE: '[data-toggle=\"modal\"]',\n        DATA_DISMISS: '[data-dismiss=\"modal\"]',\n        FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n        STICKY_CONTENT: '.sticky-top'\n    };\n    class Modal {\n        constructor(element, config) {\n            this._config = this._getConfig(config);\n            this._element = element;\n            this._dialog = element.querySelector(Selector.DIALOG);\n            this._backdrop = null;\n            this._isShown = false;\n            this._isBodyOverflowing = false;\n            this._ignoreBackdropClick = false;\n            this._isTransitioning = false;\n            this._scrollbarWidth = 0;\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        static get Default() {\n            return Default;\n        }\n        toggle(relatedTarget) {\n            return this._isShown ? this.hide() : this.show(relatedTarget);\n        }\n        show(relatedTarget) {\n            if (this._isShown || this._isTransitioning) {\n                return;\n            }\n            if ($(this._element).hasClass(ClassName.FADE)) {\n                this._isTransitioning = true;\n            }\n            const showEvent = $.Event(Event.SHOW, { relatedTarget });\n            $(this._element).trigger(showEvent);\n            if (this._isShown || showEvent.isDefaultPrevented()) {\n                return;\n            }\n            this._isShown = true;\n            this._checkScrollbar();\n            this._setScrollbar();\n            this._adjustDialog();\n            this._setEscapeEvent();\n            this._setResizeEvent();\n            $(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, event => this.hide(event));\n            $(this._dialog).on(Event.MOUSEDOWN_DISMISS, () => {\n                $(this._element).one(Event.MOUSEUP_DISMISS, event => {\n                    if ($(event.target).is(this._element)) {\n                        this._ignoreBackdropClick = true;\n                    }\n                });\n            });\n            this._showBackdrop(() => this._showElement(relatedTarget));\n        }\n        hide(event) {\n            if (event) {\n                event.preventDefault();\n            }\n            if (!this._isShown || this._isTransitioning) {\n                return;\n            }\n            const hideEvent = $.Event(Event.HIDE);\n            $(this._element).trigger(hideEvent);\n            if (!this._isShown || hideEvent.isDefaultPrevented()) {\n                return;\n            }\n            this._isShown = false;\n            const transition = $(this._element).hasClass(ClassName.FADE);\n            if (transition) {\n                this._isTransitioning = true;\n            }\n            this._setEscapeEvent();\n            this._setResizeEvent();\n            $(document).off(Event.FOCUSIN);\n            $(this._element).removeClass(ClassName.SHOW);\n            $(this._element).off(Event.CLICK_DISMISS);\n            $(this._dialog).off(Event.MOUSEDOWN_DISMISS);\n            if (transition) {\n                const transitionDuration = Util.getTransitionDurationFromElement(this._element);\n                $(this._element).one(Util.TRANSITION_END, event => this._hideModal(event)).emulateTransitionEnd(transitionDuration);\n            } else {\n                this._hideModal();\n            }\n        }\n        dispose() {\n            [\n                window,\n                this._element,\n                this._dialog\n            ].forEach(htmlElement => $(htmlElement).off(EVENT_KEY));\n            $(document).off(Event.FOCUSIN);\n            $.removeData(this._element, DATA_KEY);\n            this._config = null;\n            this._element = null;\n            this._dialog = null;\n            this._backdrop = null;\n            this._isShown = null;\n            this._isBodyOverflowing = null;\n            this._ignoreBackdropClick = null;\n            this._isTransitioning = null;\n            this._scrollbarWidth = null;\n        }\n        handleUpdate() {\n            this._adjustDialog();\n        }\n        _getConfig(config) {\n            //config = {\n            //    ...Default,\n            //    ...config\n            //};\n            config = langx.mixin({},Default,config);\n\n            Util.typeCheckConfig(NAME, config, DefaultType);\n            return config;\n        }\n        _showElement(relatedTarget) {\n            const transition = $(this._element).hasClass(ClassName.FADE);\n            if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n                document.body.appendChild(this._element);\n            }\n            this._element.style.display = 'block';\n            this._element.removeAttribute('aria-hidden');\n            this._element.setAttribute('aria-modal', true);\n            this._element.scrollTop = 0;\n            if (transition) {\n                Util.reflow(this._element);\n            }\n            $(this._element).addClass(ClassName.SHOW);\n            if (this._config.focus) {\n                this._enforceFocus();\n            }\n            const shownEvent = $.Event(Event.SHOWN, { relatedTarget });\n            const transitionComplete = () => {\n                if (this._config.focus) {\n                    this._element.focus();\n                }\n                this._isTransitioning = false;\n                $(this._element).trigger(shownEvent);\n            };\n            if (transition) {\n                const transitionDuration = Util.getTransitionDurationFromElement(this._dialog);\n                $(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(transitionDuration);\n            } else {\n                transitionComplete();\n            }\n        }\n        _enforceFocus() {\n            $(document).off(Event.FOCUSIN).on(Event.FOCUSIN, event => {\n                if (document !== event.target && this._element !== event.target && $(this._element).has(event.target).length === 0) {\n                    this._element.focus();\n                }\n            });\n        }\n        _setEscapeEvent() {\n            if (this._isShown && this._config.keyboard) {\n                $(this._element).on(Event.KEYDOWN_DISMISS, event => {\n                    if (event.which === ESCAPE_KEYCODE) {\n                        event.preventDefault();\n                        this.hide();\n                    }\n                });\n            } else if (!this._isShown) {\n                $(this._element).off(Event.KEYDOWN_DISMISS);\n            }\n        }\n        _setResizeEvent() {\n            if (this._isShown) {\n                $(window).on(Event.RESIZE, event => this.handleUpdate(event));\n            } else {\n                $(window).off(Event.RESIZE);\n            }\n        }\n        _hideModal() {\n            this._element.style.display = 'none';\n            this._element.setAttribute('aria-hidden', true);\n            this._element.removeAttribute('aria-modal');\n            this._isTransitioning = false;\n            this._showBackdrop(() => {\n                $(document.body).removeClass(ClassName.OPEN);\n                this._resetAdjustments();\n                this._resetScrollbar();\n                $(this._element).trigger(Event.HIDDEN);\n            });\n        }\n        _removeBackdrop() {\n            if (this._backdrop) {\n                $(this._backdrop).remove();\n                this._backdrop = null;\n            }\n        }\n        _showBackdrop(callback) {\n            const animate = $(this._element).hasClass(ClassName.FADE) ? ClassName.FADE : '';\n            if (this._isShown && this._config.backdrop) {\n                this._backdrop = document.createElement('div');\n                this._backdrop.className = ClassName.BACKDROP;\n                if (animate) {\n                    this._backdrop.classList.add(animate);\n                }\n                $(this._backdrop).appendTo(document.body);\n                $(this._element).on(Event.CLICK_DISMISS, event => {\n                    if (this._ignoreBackdropClick) {\n                        this._ignoreBackdropClick = false;\n                        return;\n                    }\n                    if (event.target !== event.currentTarget) {\n                        return;\n                    }\n                    if (this._config.backdrop === 'static') {\n                        this._element.focus();\n                    } else {\n                        this.hide();\n                    }\n                });\n                if (animate) {\n                    Util.reflow(this._backdrop);\n                }\n                $(this._backdrop).addClass(ClassName.SHOW);\n                if (!callback) {\n                    return;\n                }\n                if (!animate) {\n                    callback();\n                    return;\n                }\n                const backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);\n                $(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(backdropTransitionDuration);\n            } else if (!this._isShown && this._backdrop) {\n                $(this._backdrop).removeClass(ClassName.SHOW);\n                const callbackRemove = () => {\n                    this._removeBackdrop();\n                    if (callback) {\n                        callback();\n                    }\n                };\n                if ($(this._element).hasClass(ClassName.FADE)) {\n                    const backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);\n                    $(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(backdropTransitionDuration);\n                } else {\n                    callbackRemove();\n                }\n            } else if (callback) {\n                callback();\n            }\n        }\n        _adjustDialog() {\n            const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n            if (!this._isBodyOverflowing && isModalOverflowing) {\n                this._element.style.paddingLeft = `${ this._scrollbarWidth }px`;\n            }\n            if (this._isBodyOverflowing && !isModalOverflowing) {\n                this._element.style.paddingRight = `${ this._scrollbarWidth }px`;\n            }\n        }\n        _resetAdjustments() {\n            this._element.style.paddingLeft = '';\n            this._element.style.paddingRight = '';\n        }\n        _checkScrollbar() {\n            const rect = document.body.getBoundingClientRect();\n            this._isBodyOverflowing = rect.left + rect.right < window.innerWidth;\n            this._scrollbarWidth = this._getScrollbarWidth();\n        }\n        _setScrollbar() {\n            if (this._isBodyOverflowing) {\n                const fixedContent = [].slice.call(document.querySelectorAll(Selector.FIXED_CONTENT));\n                const stickyContent = [].slice.call(document.querySelectorAll(Selector.STICKY_CONTENT));\n                $(fixedContent).each((index, element) => {\n                    const actualPadding = element.style.paddingRight;\n                    const calculatedPadding = $(element).css('padding-right');\n                    $(element).data('padding-right', actualPadding).css('padding-right', `${ parseFloat(calculatedPadding) + this._scrollbarWidth }px`);\n                });\n                $(stickyContent).each((index, element) => {\n                    const actualMargin = element.style.marginRight;\n                    const calculatedMargin = $(element).css('margin-right');\n                    $(element).data('margin-right', actualMargin).css('margin-right', `${ parseFloat(calculatedMargin) - this._scrollbarWidth }px`);\n                });\n                const actualPadding = document.body.style.paddingRight;\n                const calculatedPadding = $(document.body).css('padding-right');\n                $(document.body).data('padding-right', actualPadding).css('padding-right', `${ parseFloat(calculatedPadding) + this._scrollbarWidth }px`);\n            }\n            $(document.body).addClass(ClassName.OPEN);\n        }\n        _resetScrollbar() {\n            const fixedContent = [].slice.call(document.querySelectorAll(Selector.FIXED_CONTENT));\n            $(fixedContent).each((index, element) => {\n                const padding = $(element).data('padding-right');\n                $(element).removeData('padding-right');\n                element.style.paddingRight = padding ? padding : '';\n            });\n            const elements = [].slice.call(document.querySelectorAll(`${ Selector.STICKY_CONTENT }`));\n            $(elements).each((index, element) => {\n                const margin = $(element).data('margin-right');\n                if (typeof margin !== 'undefined') {\n                    $(element).css('margin-right', margin).removeData('margin-right');\n                }\n            });\n            const padding = $(document.body).data('padding-right');\n            $(document.body).removeData('padding-right');\n            document.body.style.paddingRight = padding ? padding : '';\n        }\n        _getScrollbarWidth() {\n            const scrollDiv = document.createElement('div');\n            scrollDiv.className = ClassName.SCROLLBAR_MEASURER;\n            document.body.appendChild(scrollDiv);\n            const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n            document.body.removeChild(scrollDiv);\n            return scrollbarWidth;\n        }\n        static _jqueryInterface(config, relatedTarget) {\n            return this.each(function () {\n                let data = $(this).data(DATA_KEY);\n                //const _config = {\n                //    ...Default,\n                //    ...$this.data(),\n                //    ...typeof config === 'object' && config ? config : {}\n                //};\n                const _config = langx.mixin({},Default,$this.data(),typeof config === 'object' && config ? config : {});\n                if (!data) {\n                    data = new Modal(this, _config);\n                    $(this).data(DATA_KEY, data);\n                }\n                if (typeof config === 'string') {\n                    if (typeof data[config] === 'undefined') {\n                        throw new TypeError(`No method named \"${ config }\"`);\n                    }\n                    data[config](relatedTarget);\n                } else if (_config.show) {\n                    data.show(relatedTarget);\n                }\n            });\n        }\n    }\n    $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n        let target;\n        const selector = Util.getSelectorFromElement(this);\n        if (selector) {\n            target = document.querySelector(selector);\n        }\n        //const config = $(target).data(DATA_KEY) ? 'toggle' : {\n        //    ...$(target).data(),\n        //    ...$(this).data()\n        //};\n        const config = $(target).data(DATA_KEY) ? 'toggle' : langx.mixin({},$(target).data(),$(this).data());\n        if (this.tagName === 'A' || this.tagName === 'AREA') {\n            event.preventDefault();\n        }\n        const $target = $(target).one(Event.SHOW, showEvent => {\n            if (showEvent.isDefaultPrevented()) {\n                return;\n            }\n            $target.one(Event.HIDDEN, () => {\n                if ($(this).is(':visible')) {\n                    this.focus();\n                }\n            });\n        });\n        Modal._jqueryInterface.call($(target), config, this);\n    });\n    $.fn[NAME] = Modal._jqueryInterface;\n    $.fn[NAME].Constructor = Modal;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return Modal._jqueryInterface;\n    };\n    return Modal;\n});\ndefine('skylark-bootstrap4/tooltip',[\n    'skylark-langx/langx',\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/plugins',\n    \"./bs4\",\n    'skylark-ui-popper/Popper',\n    './util'\n], function (langx,$, plugins,bs4,Popper,Util) {\n    'use strict';\n    const NAME = 'tooltip';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.tooltip';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const CLASS_PREFIX = 'bs-tooltip';\n    const BSCLS_PREFIX_REGEX = new RegExp(`(^|\\\\s)${ CLASS_PREFIX }\\\\S+`, 'g');\n    const DefaultType = {\n        animation: 'boolean',\n        template: 'string',\n        title: '(string|element|function)',\n        trigger: 'string',\n        delay: '(number|object)',\n        html: 'boolean',\n        selector: '(string|boolean)',\n        placement: '(string|function)',\n        offset: '(number|string)',\n        container: '(string|element|boolean)',\n        fallbackPlacement: '(string|array)',\n        boundary: '(string|element)'\n    };\n    const AttachmentMap = {\n        AUTO: 'auto',\n        TOP: 'top',\n        RIGHT: 'right',\n        BOTTOM: 'bottom',\n        LEFT: 'left'\n    };\n    const Default = {\n        animation: true,\n        template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<div class=\"tooltip-inner\"></div></div>',\n        trigger: 'hover focus',\n        title: '',\n        delay: 0,\n        html: false,\n        selector: false,\n        placement: 'top',\n        offset: 0,\n        container: false,\n        fallbackPlacement: 'flip',\n        boundary: 'scrollParent'\n    };\n    const HoverState = {\n        SHOW: 'show',\n        OUT: 'out'\n    };\n    const Event = {\n        HIDE: `hide${ EVENT_KEY }`,\n        HIDDEN: `hidden${ EVENT_KEY }`,\n        SHOW: `show${ EVENT_KEY }`,\n        SHOWN: `shown${ EVENT_KEY }`,\n        INSERTED: `inserted${ EVENT_KEY }`,\n        CLICK: `click${ EVENT_KEY }`,\n        FOCUSIN: `focusin${ EVENT_KEY }`,\n        FOCUSOUT: `focusout${ EVENT_KEY }`,\n        MOUSEENTER: `mouseenter${ EVENT_KEY }`,\n        MOUSELEAVE: `mouseleave${ EVENT_KEY }`\n    };\n    const ClassName = {\n        FADE: 'fade',\n        SHOW: 'show'\n    };\n    const Selector = {\n        TOOLTIP: '.tooltip',\n        TOOLTIP_INNER: '.tooltip-inner',\n        ARROW: '.arrow'\n    };\n    const Trigger = {\n        HOVER: 'hover',\n        FOCUS: 'focus',\n        CLICK: 'click',\n        MANUAL: 'manual'\n    };\n    class Tooltip {\n        constructor(element, config) {\n            if (typeof Popper === 'undefined') {\n                throw new TypeError(\"Bootstrap's tooltips require skylark-ui-popper/Popper (https://skylark-ui-popper/Popper.org/)\");\n            }\n            this._isEnabled = true;\n            this._timeout = 0;\n            this._hoverState = '';\n            this._activeTrigger = {};\n            this._popper = null;\n            this.element = element;\n            this.config = this._getConfig(config);\n            this.tip = null;\n            this._setListeners();\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        static get Default() {\n            return Default;\n        }\n        static get NAME() {\n            return NAME;\n        }\n        static get DATA_KEY() {\n            return DATA_KEY;\n        }\n        static get Event() {\n            return Event;\n        }\n        static get EVENT_KEY() {\n            return EVENT_KEY;\n        }\n        static get DefaultType() {\n            return DefaultType;\n        }\n        enable() {\n            this._isEnabled = true;\n        }\n        disable() {\n            this._isEnabled = false;\n        }\n        toggleEnabled() {\n            this._isEnabled = !this._isEnabled;\n        }\n        toggle(event) {\n            if (!this._isEnabled) {\n                return;\n            }\n            if (event) {\n                const dataKey = this.constructor.DATA_KEY;\n                let context = $(event.currentTarget).data(dataKey);\n                if (!context) {\n                    context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n                    $(event.currentTarget).data(dataKey, context);\n                }\n                context._activeTrigger.click = !context._activeTrigger.click;\n                if (context._isWithActiveTrigger()) {\n                    context._enter(null, context);\n                } else {\n                    context._leave(null, context);\n                }\n            } else {\n                if ($(this.getTipElement()).hasClass(ClassName.SHOW)) {\n                    this._leave(null, this);\n                    return;\n                }\n                this._enter(null, this);\n            }\n        }\n        dispose() {\n            clearTimeout(this._timeout);\n            $.removeData(this.element, this.constructor.DATA_KEY);\n            $(this.element).off(this.constructor.EVENT_KEY);\n            $(this.element).closest('.modal').off('hide.bs.modal');\n            if (this.tip) {\n                $(this.tip).remove();\n            }\n            this._isEnabled = null;\n            this._timeout = null;\n            this._hoverState = null;\n            this._activeTrigger = null;\n            if (this._popper !== null) {\n                this._popper.destroy();\n            }\n            this._popper = null;\n            this.element = null;\n            this.config = null;\n            this.tip = null;\n        }\n        show() {\n            if ($(this.element).css('display') === 'none') {\n                throw new Error('Please use show on visible elements');\n            }\n            const showEvent = $.Event(this.constructor.Event.SHOW);\n            if (this.isWithContent() && this._isEnabled) {\n                $(this.element).trigger(showEvent);\n                const shadowRoot = Util.findShadowRoot(this.element);\n                const isInTheDom = $.contains(shadowRoot !== null ? shadowRoot : this.element.ownerDocument.documentElement, this.element);\n                if (showEvent.isDefaultPrevented() || !isInTheDom) {\n                    return;\n                }\n                const tip = this.getTipElement();\n                const tipId = Util.getUID(this.constructor.NAME);\n                tip.setAttribute('id', tipId);\n                this.element.setAttribute('aria-describedby', tipId);\n                this.setContent();\n                if (this.config.animation) {\n                    $(tip).addClass(ClassName.FADE);\n                }\n                const placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;\n                const attachment = this._getAttachment(placement);\n                this.addAttachmentClass(attachment);\n                const container = this._getContainer();\n                $(tip).data(this.constructor.DATA_KEY, this);\n                if (!$.contains(this.element.ownerDocument.documentElement, this.tip)) {\n                    $(tip).appendTo(container);\n                }\n                $(this.element).trigger(this.constructor.Event.INSERTED);\n                this._popper = new Popper(this.element, tip, {\n                    placement: attachment,\n                    modifiers: {\n                        offset: { offset: this.config.offset },\n                        flip: { behavior: this.config.fallbackPlacement },\n                        arrow: { element: Selector.ARROW },\n                        preventOverflow: { boundariesElement: this.config.boundary }\n                    },\n                    onCreate: data => {\n                        if (data.originalPlacement !== data.placement) {\n                            this._handlePopperPlacementChange(data);\n                        }\n                    },\n                    onUpdate: data => this._handlePopperPlacementChange(data)\n                });\n                $(tip).addClass(ClassName.SHOW);\n                if ('ontouchstart' in document.documentElement) {\n                    $(document.body).children().on('mouseover', null, $.noop);\n                }\n                const complete = () => {\n                    if (this.config.animation) {\n                        this._fixTransition();\n                    }\n                    const prevHoverState = this._hoverState;\n                    this._hoverState = null;\n                    $(this.element).trigger(this.constructor.Event.SHOWN);\n                    if (prevHoverState === HoverState.OUT) {\n                        this._leave(null, this);\n                    }\n                };\n                if ($(this.tip).hasClass(ClassName.FADE)) {\n                    const transitionDuration = Util.getTransitionDurationFromElement(this.tip);\n                    $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n                } else {\n                    complete();\n                }\n            }\n        }\n        hide(callback) {\n            const tip = this.getTipElement();\n            const hideEvent = $.Event(this.constructor.Event.HIDE);\n            const complete = () => {\n                if (this._hoverState !== HoverState.SHOW && tip.parentNode) {\n                    tip.parentNode.removeChild(tip);\n                }\n                this._cleanTipClass();\n                this.element.removeAttribute('aria-describedby');\n                $(this.element).trigger(this.constructor.Event.HIDDEN);\n                if (this._popper !== null) {\n                    this._popper.destroy();\n                }\n                if (callback) {\n                    callback();\n                }\n            };\n            $(this.element).trigger(hideEvent);\n            if (hideEvent.isDefaultPrevented()) {\n                return;\n            }\n            $(tip).removeClass(ClassName.SHOW);\n            if ('ontouchstart' in document.documentElement) {\n                $(document.body).children().off('mouseover', null, $.noop);\n            }\n            this._activeTrigger[Trigger.CLICK] = false;\n            this._activeTrigger[Trigger.FOCUS] = false;\n            this._activeTrigger[Trigger.HOVER] = false;\n            if ($(this.tip).hasClass(ClassName.FADE)) {\n                const transitionDuration = Util.getTransitionDurationFromElement(tip);\n                $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n            } else {\n                complete();\n            }\n            this._hoverState = '';\n        }\n        update() {\n            if (this._popper !== null) {\n                this._popper.scheduleUpdate();\n            }\n        }\n        isWithContent() {\n            return Boolean(this.getTitle());\n        }\n        addAttachmentClass(attachment) {\n            $(this.getTipElement()).addClass(`${ CLASS_PREFIX }-${ attachment }`);\n        }\n        getTipElement() {\n            this.tip = this.tip || $(this.config.template)[0];\n            return this.tip;\n        }\n        setContent() {\n            const tip = this.getTipElement();\n            this.setElementContent($(tip.querySelectorAll(Selector.TOOLTIP_INNER)), this.getTitle());\n            $(tip).removeClass(`${ ClassName.FADE } ${ ClassName.SHOW }`);\n        }\n        setElementContent($element, content) {\n            const html = this.config.html;\n            if (typeof content === 'object' && (content.nodeType || content.skylark-utils-dom/query)) {\n                if (html) {\n                    if (!$(content).parent().is($element)) {\n                        $element.empty().append(content);\n                    }\n                } else {\n                    $element.text($(content).text());\n                }\n            } else {\n                $element[html ? 'html' : 'text'](content);\n            }\n        }\n        getTitle() {\n            let title = this.element.getAttribute('data-original-title');\n            if (!title) {\n                title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;\n            }\n            return title;\n        }\n        _getContainer() {\n            if (this.config.container === false) {\n                return document.body;\n            }\n            if (Util.isElement(this.config.container)) {\n                return $(this.config.container);\n            }\n            return $(document).find(this.config.container);\n        }\n        _getAttachment(placement) {\n            return AttachmentMap[placement.toUpperCase()];\n        }\n        _setListeners() {\n            const triggers = this.config.trigger.split(' ');\n            triggers.forEach(trigger => {\n                if (trigger === 'click') {\n                    $(this.element).on(this.constructor.Event.CLICK, this.config.selector, event => this.toggle(event));\n                } else if (trigger !== Trigger.MANUAL) {\n                    const eventIn = trigger === Trigger.HOVER ? this.constructor.Event.MOUSEENTER : this.constructor.Event.FOCUSIN;\n                    const eventOut = trigger === Trigger.HOVER ? this.constructor.Event.MOUSELEAVE : this.constructor.Event.FOCUSOUT;\n                    $(this.element).on(eventIn, this.config.selector, event => this._enter(event)).on(eventOut, this.config.selector, event => this._leave(event));\n                }\n            });\n            $(this.element).closest('.modal').on('hide.bs.modal', () => {\n                if (this.element) {\n                    this.hide();\n                }\n            });\n            if (this.config.selector) {\n                //this.config = {\n                //    ...this.config,\n                //    trigger: 'manual',\n                //    selector: ''\n                //};\n                langx.mixin(this.config,{\n                    trigger: 'manual',\n                    selector: ''\n                });\n            } else {\n                this._fixTitle();\n            }\n        }\n        _fixTitle() {\n            const titleType = typeof this.element.getAttribute('data-original-title');\n            if (this.element.getAttribute('title') || titleType !== 'string') {\n                this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');\n                this.element.setAttribute('title', '');\n            }\n        }\n        _enter(event, context) {\n            const dataKey = this.constructor.DATA_KEY;\n            context = context || $(event.currentTarget).data(dataKey);\n            if (!context) {\n                context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n                $(event.currentTarget).data(dataKey, context);\n            }\n            if (event) {\n                context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;\n            }\n            if ($(context.getTipElement()).hasClass(ClassName.SHOW) || context._hoverState === HoverState.SHOW) {\n                context._hoverState = HoverState.SHOW;\n                return;\n            }\n            clearTimeout(context._timeout);\n            context._hoverState = HoverState.SHOW;\n            if (!context.config.delay || !context.config.delay.show) {\n                context.show();\n                return;\n            }\n            context._timeout = setTimeout(() => {\n                if (context._hoverState === HoverState.SHOW) {\n                    context.show();\n                }\n            }, context.config.delay.show);\n        }\n        _leave(event, context) {\n            const dataKey = this.constructor.DATA_KEY;\n            context = context || $(event.currentTarget).data(dataKey);\n            if (!context) {\n                context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n                $(event.currentTarget).data(dataKey, context);\n            }\n            if (event) {\n                context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;\n            }\n            if (context._isWithActiveTrigger()) {\n                return;\n            }\n            clearTimeout(context._timeout);\n            context._hoverState = HoverState.OUT;\n            if (!context.config.delay || !context.config.delay.hide) {\n                context.hide();\n                return;\n            }\n            context._timeout = setTimeout(() => {\n                if (context._hoverState === HoverState.OUT) {\n                    context.hide();\n                }\n            }, context.config.delay.hide);\n        }\n        _isWithActiveTrigger() {\n            for (const trigger in this._activeTrigger) {\n                if (this._activeTrigger[trigger]) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        _getConfig(config) {\n            //config = {\n            //    ...this.constructor.Default,\n            //    ...$(this.element).data(),\n            //    ...typeof config === 'object' && config ? config : {}\n            //};\n            config = langx.mixin({},this.constructor.Default,$(this.element).data(),config);\n            if (typeof config.delay === 'number') {\n                config.delay = {\n                    show: config.delay,\n                    hide: config.delay\n                };\n            }\n            if (typeof config.title === 'number') {\n                config.title = config.title.toString();\n            }\n            if (typeof config.content === 'number') {\n                config.content = config.content.toString();\n            }\n            Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\n            return config;\n        }\n        _getDelegateConfig() {\n            const config = {};\n            if (this.config) {\n                for (const key in this.config) {\n                    if (this.constructor.Default[key] !== this.config[key]) {\n                        config[key] = this.config[key];\n                    }\n                }\n            }\n            return config;\n        }\n        _cleanTipClass() {\n            const $tip = $(this.getTipElement());\n            const tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);\n            if (tabClass !== null && tabClass.length) {\n                $tip.removeClass(tabClass.join(''));\n            }\n        }\n        _handlePopperPlacementChange(popperData) {\n            const popperInstance = popperData.instance;\n            this.tip = popperInstance.popper;\n            this._cleanTipClass();\n            this.addAttachmentClass(this._getAttachment(popperData.placement));\n        }\n        _fixTransition() {\n            const tip = this.getTipElement();\n            const initConfigAnimation = this.config.animation;\n            if (tip.getAttribute('x-placement') !== null) {\n                return;\n            }\n            $(tip).removeClass(ClassName.FADE);\n            this.config.animation = false;\n            this.hide();\n            this.show();\n            this.config.animation = initConfigAnimation;\n        }\n        static _jqueryInterface(config) {\n            return this.each(function () {\n                let data = $(this).data(DATA_KEY);\n                const _config = typeof config === 'object' && config;\n                if (!data && /dispose|hide/.test(config)) {\n                    return;\n                }\n                if (!data) {\n                    data = new Tooltip(this, _config);\n                    $(this).data(DATA_KEY, data);\n                }\n                if (typeof config === 'string') {\n                    if (typeof data[config] === 'undefined') {\n                        throw new TypeError(`No method named \"${ config }\"`);\n                    }\n                    data[config]();\n                }\n            });\n        }\n    }\n    $.fn[NAME] = Tooltip._jqueryInterface;\n    $.fn[NAME].Constructor = Tooltip;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return Tooltip._jqueryInterface;\n    };\n    return Tooltip;\n});\ndefine('skylark-bootstrap4/popover',[\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/plugins',\n    \"./bs4\",\n    './tooltip'\n], function ($, plugins,bs4,Tooltip) {\n    \n    'use strict';\n    const NAME = 'popover';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.popover';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const CLASS_PREFIX = 'bs-popover';\n    const BSCLS_PREFIX_REGEX = new RegExp(`(^|\\\\s)${ CLASS_PREFIX }\\\\S+`, 'g');\n    //const Default = {\n    //    ...Tooltip.Default,\n    //    placement: 'right',\n    //    trigger: 'click',\n    //    content: '',\n    //    template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<h3 class=\"popover-header\"></h3>' + '<div class=\"popover-body\"></div></div>'\n    //};\n    //const DefaultType = {\n    //    ...Tooltip.DefaultType,\n    //    content: '(string|element|function)'\n    //};\n    const Default = langx.mixin(\n        {},\n        Tooltip.Default,\n        {\n            placement: 'right',\n            trigger: 'click',\n            content: '',\n            template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<h3 class=\"popover-header\"></h3>' + '<div class=\"popover-body\"></div></div>'\n        }\n    );\n    const DefaultType = langx.mixin(\n        {},  \n        Tooltip.DefaultType,\n        {\n            content: '(string|element|function)'\n        }\n    );\n    const ClassName = {\n        FADE: 'fade',\n        SHOW: 'show'\n    };\n    const Selector = {\n        TITLE: '.popover-header',\n        CONTENT: '.popover-body'\n    };\n    const Event = {\n        HIDE: `hide${ EVENT_KEY }`,\n        HIDDEN: `hidden${ EVENT_KEY }`,\n        SHOW: `show${ EVENT_KEY }`,\n        SHOWN: `shown${ EVENT_KEY }`,\n        INSERTED: `inserted${ EVENT_KEY }`,\n        CLICK: `click${ EVENT_KEY }`,\n        FOCUSIN: `focusin${ EVENT_KEY }`,\n        FOCUSOUT: `focusout${ EVENT_KEY }`,\n        MOUSEENTER: `mouseenter${ EVENT_KEY }`,\n        MOUSELEAVE: `mouseleave${ EVENT_KEY }`\n    };\n    class Popover extends Tooltip {\n        static get VERSION() {\n            return VERSION;\n        }\n        static get Default() {\n            return Default;\n        }\n        static get NAME() {\n            return NAME;\n        }\n        static get DATA_KEY() {\n            return DATA_KEY;\n        }\n        static get Event() {\n            return Event;\n        }\n        static get EVENT_KEY() {\n            return EVENT_KEY;\n        }\n        static get DefaultType() {\n            return DefaultType;\n        }\n        isWithContent() {\n            return this.getTitle() || this._getContent();\n        }\n        addAttachmentClass(attachment) {\n            $(this.getTipElement()).addClass(`${ CLASS_PREFIX }-${ attachment }`);\n        }\n        getTipElement() {\n            this.tip = this.tip || $(this.config.template)[0];\n            return this.tip;\n        }\n        setContent() {\n            const $tip = $(this.getTipElement());\n            this.setElementContent($tip.find(Selector.TITLE), this.getTitle());\n            let content = this._getContent();\n            if (typeof content === 'function') {\n                content = content.call(this.element);\n            }\n            this.setElementContent($tip.find(Selector.CONTENT), content);\n            $tip.removeClass(`${ ClassName.FADE } ${ ClassName.SHOW }`);\n        }\n        _getContent() {\n            return this.element.getAttribute('data-content') || this.config.content;\n        }\n        _cleanTipClass() {\n            const $tip = $(this.getTipElement());\n            const tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);\n            if (tabClass !== null && tabClass.length > 0) {\n                $tip.removeClass(tabClass.join(''));\n            }\n        }\n        static _jqueryInterface(config) {\n            return this.each(function () {\n                let data = $(this).data(DATA_KEY);\n                const _config = typeof config === 'object' ? config : null;\n                if (!data && /dispose|hide/.test(config)) {\n                    return;\n                }\n                if (!data) {\n                    data = new Popover(this, _config);\n                    $(this).data(DATA_KEY, data);\n                }\n                if (typeof config === 'string') {\n                    if (typeof data[config] === 'undefined') {\n                        throw new TypeError(`No method named \"${ config }\"`);\n                    }\n                    data[config]();\n                }\n            });\n        }\n    }\n    $.fn[NAME] = Popover._jqueryInterface;\n    $.fn[NAME].Constructor = Popover;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return Popover._jqueryInterface;\n    };\n    return Popover;\n});\ndefine('skylark-bootstrap4/scrollspy',[\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/plugins',\n    \"./bs4\",\n    './util'\n], function ($, plugins,bs4,Util) {\n\n    'use strict';\n    const NAME = 'scrollspy';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.scrollspy';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const DATA_API_KEY = '.data-api';\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const Default = {\n        offset: 10,\n        method: 'auto',\n        target: ''\n    };\n    const DefaultType = {\n        offset: 'number',\n        method: 'string',\n        target: '(string|element)'\n    };\n    const Event = {\n        ACTIVATE: `activate${ EVENT_KEY }`,\n        SCROLL: `scroll${ EVENT_KEY }`,\n        LOAD_DATA_API: `load${ EVENT_KEY }${ DATA_API_KEY }`\n    };\n    const ClassName = {\n        DROPDOWN_ITEM: 'dropdown-item',\n        DROPDOWN_MENU: 'dropdown-menu',\n        ACTIVE: 'active'\n    };\n    const Selector = {\n        DATA_SPY: '[data-spy=\"scroll\"]',\n        ACTIVE: '.active',\n        NAV_LIST_GROUP: '.nav, .list-group',\n        NAV_LINKS: '.nav-link',\n        NAV_ITEMS: '.nav-item',\n        LIST_ITEMS: '.list-group-item',\n        DROPDOWN: '.dropdown',\n        DROPDOWN_ITEMS: '.dropdown-item',\n        DROPDOWN_TOGGLE: '.dropdown-toggle'\n    };\n    const OffsetMethod = {\n        OFFSET: 'offset',\n        POSITION: 'position'\n    };\n    class ScrollSpy {\n        constructor(element, config) {\n            this._element = element;\n            this._scrollElement = element.tagName === 'BODY' ? window : element;\n            this._config = this._getConfig(config);\n            this._selector = `${ this._config.target } ${ Selector.NAV_LINKS },` + `${ this._config.target } ${ Selector.LIST_ITEMS },` + `${ this._config.target } ${ Selector.DROPDOWN_ITEMS }`;\n            this._offsets = [];\n            this._targets = [];\n            this._activeTarget = null;\n            this._scrollHeight = 0;\n            $(this._scrollElement).on(Event.SCROLL, event => this._process(event));\n            this.refresh();\n            this._process();\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        static get Default() {\n            return Default;\n        }\n        refresh() {\n            const autoMethod = this._scrollElement === this._scrollElement.window ? OffsetMethod.OFFSET : OffsetMethod.POSITION;\n            const offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\n            const offsetBase = offsetMethod === OffsetMethod.POSITION ? this._getScrollTop() : 0;\n            this._offsets = [];\n            this._targets = [];\n            this._scrollHeight = this._getScrollHeight();\n            const targets = [].slice.call(document.querySelectorAll(this._selector));\n            targets.map(element => {\n                let target;\n                const targetSelector = Util.getSelectorFromElement(element);\n                if (targetSelector) {\n                    target = document.querySelector(targetSelector);\n                }\n                if (target) {\n                    const targetBCR = target.getBoundingClientRect();\n                    if (targetBCR.width || targetBCR.height) {\n                        return [\n                            $(target)[offsetMethod]().top + offsetBase,\n                            targetSelector\n                        ];\n                    }\n                }\n                return null;\n            }).filter(item => item).sort((a, b) => a[0] - b[0]).forEach(item => {\n                this._offsets.push(item[0]);\n                this._targets.push(item[1]);\n            });\n        }\n        dispose() {\n            $.removeData(this._element, DATA_KEY);\n            $(this._scrollElement).off(EVENT_KEY);\n            this._element = null;\n            this._scrollElement = null;\n            this._config = null;\n            this._selector = null;\n            this._offsets = null;\n            this._targets = null;\n            this._activeTarget = null;\n            this._scrollHeight = null;\n        }\n        _getConfig(config) {\n            //config = {\n            //    ...Default,\n            //    ...typeof config === 'object' && config ? config : {}\n            //};\n            config = langx.mixin({},Default,typeof config === 'object' && config ? config : {});\n            if (typeof config.target !== 'string') {\n                let id = $(config.target).attr('id');\n                if (!id) {\n                    id = Util.getUID(NAME);\n                    $(config.target).attr('id', id);\n                }\n                config.target = `#${ id }`;\n            }\n            Util.typeCheckConfig(NAME, config, DefaultType);\n            return config;\n        }\n        _getScrollTop() {\n            return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;\n        }\n        _getScrollHeight() {\n            return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);\n        }\n        _getOffsetHeight() {\n            return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;\n        }\n        _process() {\n            const scrollTop = this._getScrollTop() + this._config.offset;\n            const scrollHeight = this._getScrollHeight();\n            const maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\n            if (this._scrollHeight !== scrollHeight) {\n                this.refresh();\n            }\n            if (scrollTop >= maxScroll) {\n                const target = this._targets[this._targets.length - 1];\n                if (this._activeTarget !== target) {\n                    this._activate(target);\n                }\n                return;\n            }\n            if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\n                this._activeTarget = null;\n                this._clear();\n                return;\n            }\n            const offsetLength = this._offsets.length;\n            for (let i = offsetLength; i--;) {\n                const isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (typeof this._offsets[i + 1] === 'undefined' || scrollTop < this._offsets[i + 1]);\n                if (isActiveTarget) {\n                    this._activate(this._targets[i]);\n                }\n            }\n        }\n        _activate(target) {\n            this._activeTarget = target;\n            this._clear();\n            const queries = this._selector.split(',').map(selector => `${ selector }[data-target=\"${ target }\"],${ selector }[href=\"${ target }\"]`);\n            const $link = $([].slice.call(document.querySelectorAll(queries.join(','))));\n            if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {\n                $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);\n                $link.addClass(ClassName.ACTIVE);\n            } else {\n                $link.addClass(ClassName.ACTIVE);\n                $link.parents(Selector.NAV_LIST_GROUP).prev(`${ Selector.NAV_LINKS }, ${ Selector.LIST_ITEMS }`).addClass(ClassName.ACTIVE);\n                $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_ITEMS).children(Selector.NAV_LINKS).addClass(ClassName.ACTIVE);\n            }\n            $(this._scrollElement).trigger(Event.ACTIVATE, { relatedTarget: target });\n        }\n        _clear() {\n            [].slice.call(document.querySelectorAll(this._selector)).filter(node => node.classList.contains(ClassName.ACTIVE)).forEach(node => node.classList.remove(ClassName.ACTIVE));\n        }\n        static _jqueryInterface(config) {\n            return this.each(function () {\n                let data = $(this).data(DATA_KEY);\n                const _config = typeof config === 'object' && config;\n                if (!data) {\n                    data = new ScrollSpy(this, _config);\n                    $(this).data(DATA_KEY, data);\n                }\n                if (typeof config === 'string') {\n                    if (typeof data[config] === 'undefined') {\n                        throw new TypeError(`No method named \"${ config }\"`);\n                    }\n                    data[config]();\n                }\n            });\n        }\n    }\n    $(window).on(Event.LOAD_DATA_API, () => {\n        const scrollSpys = [].slice.call(document.querySelectorAll(Selector.DATA_SPY));\n        const scrollSpysLength = scrollSpys.length;\n        for (let i = scrollSpysLength; i--;) {\n            const $spy = $(scrollSpys[i]);\n            ScrollSpy._jqueryInterface.call($spy, $spy.data());\n        }\n    });\n    $.fn[NAME] = ScrollSpy._jqueryInterface;\n    $.fn[NAME].Constructor = ScrollSpy;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return ScrollSpy._jqueryInterface;\n    };\n    return ScrollSpy;\n});\ndefine('skylark-bootstrap4/tab',[\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/plugins',\n    \"./bs4\",\n    './util'\n], function ($, plugins,bs4,Util) {\n\n    'use strict';\n    const NAME = 'tab';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.tab';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const DATA_API_KEY = '.data-api';\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const Event = {\n        HIDE: `hide${ EVENT_KEY }`,\n        HIDDEN: `hidden${ EVENT_KEY }`,\n        SHOW: `show${ EVENT_KEY }`,\n        SHOWN: `shown${ EVENT_KEY }`,\n        CLICK_DATA_API: `click${ EVENT_KEY }${ DATA_API_KEY }`\n    };\n    const ClassName = {\n        DROPDOWN_MENU: 'dropdown-menu',\n        ACTIVE: 'active',\n        DISABLED: 'disabled',\n        FADE: 'fade',\n        SHOW: 'show'\n    };\n    const Selector = {\n        DROPDOWN: '.dropdown',\n        NAV_LIST_GROUP: '.nav, .list-group',\n        ACTIVE: '.active',\n        ACTIVE_UL: '> li > .active',\n        DATA_TOGGLE: '[data-toggle=\"tab\"], [data-toggle=\"pill\"], [data-toggle=\"list\"]',\n        DROPDOWN_TOGGLE: '.dropdown-toggle',\n        DROPDOWN_ACTIVE_CHILD: '> .dropdown-menu .active'\n    };\n    class Tab {\n        constructor(element) {\n            this._element = element;\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        show() {\n            if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $(this._element).hasClass(ClassName.ACTIVE) || $(this._element).hasClass(ClassName.DISABLED)) {\n                return;\n            }\n            let target;\n            let previous;\n            const listElement = $(this._element).closest(Selector.NAV_LIST_GROUP)[0];\n            const selector = Util.getSelectorFromElement(this._element);\n            if (listElement) {\n                const itemSelector = listElement.nodeName === 'UL' || listElement.nodeName === 'OL' ? Selector.ACTIVE_UL : Selector.ACTIVE;\n                previous = $.makeArray($(listElement).find(itemSelector));\n                previous = previous[previous.length - 1];\n            }\n            const hideEvent = $.Event(Event.HIDE, { relatedTarget: this._element });\n            const showEvent = $.Event(Event.SHOW, { relatedTarget: previous });\n            if (previous) {\n                $(previous).trigger(hideEvent);\n            }\n            $(this._element).trigger(showEvent);\n            if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {\n                return;\n            }\n            if (selector) {\n                target = document.querySelector(selector);\n            }\n            this._activate(this._element, listElement);\n            const complete = () => {\n                const hiddenEvent = $.Event(Event.HIDDEN, { relatedTarget: this._element });\n                const shownEvent = $.Event(Event.SHOWN, { relatedTarget: previous });\n                $(previous).trigger(hiddenEvent);\n                $(this._element).trigger(shownEvent);\n            };\n            if (target) {\n                this._activate(target, target.parentNode, complete);\n            } else {\n                complete();\n            }\n        }\n        dispose() {\n            $.removeData(this._element, DATA_KEY);\n            this._element = null;\n        }\n        _activate(element, container, callback) {\n            const activeElements = container && (container.nodeName === 'UL' || container.nodeName === 'OL') ? $(container).find(Selector.ACTIVE_UL) : $(container).children(Selector.ACTIVE);\n            const active = activeElements[0];\n            const isTransitioning = callback && (active && $(active).hasClass(ClassName.FADE));\n            const complete = () => this._transitionComplete(element, active, callback);\n            if (active && isTransitioning) {\n                const transitionDuration = Util.getTransitionDurationFromElement(active);\n                $(active).removeClass(ClassName.SHOW).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n            } else {\n                complete();\n            }\n        }\n        _transitionComplete(element, active, callback) {\n            if (active) {\n                $(active).removeClass(ClassName.ACTIVE);\n                const dropdownChild = $(active.parentNode).find(Selector.DROPDOWN_ACTIVE_CHILD)[0];\n                if (dropdownChild) {\n                    $(dropdownChild).removeClass(ClassName.ACTIVE);\n                }\n                if (active.getAttribute('role') === 'tab') {\n                    active.setAttribute('aria-selected', false);\n                }\n            }\n            $(element).addClass(ClassName.ACTIVE);\n            if (element.getAttribute('role') === 'tab') {\n                element.setAttribute('aria-selected', true);\n            }\n            Util.reflow(element);\n            $(element).addClass(ClassName.SHOW);\n            if (element.parentNode && $(element.parentNode).hasClass(ClassName.DROPDOWN_MENU)) {\n                const dropdownElement = $(element).closest(Selector.DROPDOWN)[0];\n                if (dropdownElement) {\n                    const dropdownToggleList = [].slice.call(dropdownElement.querySelectorAll(Selector.DROPDOWN_TOGGLE));\n                    $(dropdownToggleList).addClass(ClassName.ACTIVE);\n                }\n                element.setAttribute('aria-expanded', true);\n            }\n            if (callback) {\n                callback();\n            }\n        }\n        static _jqueryInterface(config) {\n            return this.each(function () {\n                const $this = $(this);\n                let data = $this.data(DATA_KEY);\n                if (!data) {\n                    data = new Tab(this);\n                    $this.data(DATA_KEY, data);\n                }\n                if (typeof config === 'string') {\n                    if (typeof data[config] === 'undefined') {\n                        throw new TypeError(`No method named \"${ config }\"`);\n                    }\n                    data[config]();\n                }\n            });\n        }\n    }\n    $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n        event.preventDefault();\n        Tab._jqueryInterface.call($(this), 'show');\n    });\n    $.fn[NAME] = Tab._jqueryInterface;\n    $.fn[NAME].Constructor = Tab;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return Tab._jqueryInterface;\n    };\n    return Tab;\n});\ndefine('skylark-bootstrap4/toast',[\n    'skylark-langx/langx',\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/plugins',\n    \"./bs4\",\n    './util'\n], function (langx,$, plugins,bs4,Util) {\n\n    'use strict';\n    const NAME = 'toast';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.toast';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const Event = {\n        CLICK_DISMISS: `click.dismiss${ EVENT_KEY }`,\n        HIDE: `hide${ EVENT_KEY }`,\n        HIDDEN: `hidden${ EVENT_KEY }`,\n        SHOW: `show${ EVENT_KEY }`,\n        SHOWN: `shown${ EVENT_KEY }`\n    };\n    const ClassName = {\n        FADE: 'fade',\n        HIDE: 'hide',\n        SHOW: 'show',\n        SHOWING: 'showing'\n    };\n    const DefaultType = {\n        animation: 'boolean',\n        autohide: 'boolean',\n        delay: 'number'\n    };\n    const Default = {\n        animation: true,\n        autohide: true,\n        delay: 500\n    };\n    const Selector = { DATA_DISMISS: '[data-dismiss=\"toast\"]' };\n    class Toast {\n        constructor(element, config) {\n            this._element = element;\n            this._config = this._getConfig(config);\n            this._timeout = null;\n            this._setListeners();\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        static get DefaultType() {\n            return DefaultType;\n        }\n        show() {\n            $(this._element).trigger(Event.SHOW);\n            if (this._config.animation) {\n                this._element.classList.add(ClassName.FADE);\n            }\n            const complete = () => {\n                this._element.classList.remove(ClassName.SHOWING);\n                this._element.classList.add(ClassName.SHOW);\n                $(this._element).trigger(Event.SHOWN);\n                if (this._config.autohide) {\n                    this.hide();\n                }\n            };\n            this._element.classList.remove(ClassName.HIDE);\n            this._element.classList.add(ClassName.SHOWING);\n            if (this._config.animation) {\n                const transitionDuration = Util.getTransitionDurationFromElement(this._element);\n                $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n            } else {\n                complete();\n            }\n        }\n        hide(withoutTimeout) {\n            if (!this._element.classList.contains(ClassName.SHOW)) {\n                return;\n            }\n            $(this._element).trigger(Event.HIDE);\n            if (withoutTimeout) {\n                this._close();\n            } else {\n                this._timeout = setTimeout(() => {\n                    this._close();\n                }, this._config.delay);\n            }\n        }\n        dispose() {\n            clearTimeout(this._timeout);\n            this._timeout = null;\n            if (this._element.classList.contains(ClassName.SHOW)) {\n                this._element.classList.remove(ClassName.SHOW);\n            }\n            $(this._element).off(Event.CLICK_DISMISS);\n            $.removeData(this._element, DATA_KEY);\n            this._element = null;\n            this._config = null;\n        }\n        _getConfig(config) {\n            //config = {\n            //    ...Default,\n            //    ...$(this._element).data(),\n            //    ...typeof config === 'object' && config ? config : {}\n            //};\n            const _config = langx.mixin({},Default,$(this._element).data(),typeof config === 'object' && config ? config : {});\n            Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\n            return config;\n        }\n        _setListeners() {\n            $(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, () => this.hide(true));\n        }\n        _close() {\n            const complete = () => {\n                this._element.classList.add(ClassName.HIDE);\n                $(this._element).trigger(Event.HIDDEN);\n            };\n            this._element.classList.remove(ClassName.SHOW);\n            if (this._config.animation) {\n                const transitionDuration = Util.getTransitionDurationFromElement(this._element);\n                $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n            } else {\n                complete();\n            }\n        }\n        static _jqueryInterface(config) {\n            return this.each(function () {\n                const $element = $(this);\n                let data = $element.data(DATA_KEY);\n                const _config = typeof config === 'object' && config;\n                if (!data) {\n                    data = new Toast(this, _config);\n                    $element.data(DATA_KEY, data);\n                }\n                if (typeof config === 'string') {\n                    if (typeof data[config] === 'undefined') {\n                        throw new TypeError(`No method named \"${ config }\"`);\n                    }\n                    data[config](this);\n                }\n            });\n        }\n    }\n    $.fn[NAME] = Toast._jqueryInterface;\n    $.fn[NAME].Constructor = Toast;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return Toast._jqueryInterface;\n    };\n    return Toast;\n});\ndefine('skylark-bootstrap4/main',[\n    \"skylark-utils-dom/query\",\n    './alert',\n    './button',\n    './carousel',\n    './collapse',\n    './dropdown',\n    './modal',\n    './popover',\n    './scrollspy',\n    './tab',\n    './toast',\n    './tooltip',\n    './util'\n], function($) {\n    return $;\n});\ndefine('skylark-bootstrap4', ['skylark-bootstrap4/main'], function (main) { return main; });\n\n"]}
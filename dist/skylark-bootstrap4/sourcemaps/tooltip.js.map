{"version":3,"sources":["tooltip.js"],"names":["define","langx","$","eventer","plugins","bs4","Popper","Util","NAME","VERSION","DATA_KEY","EVENT_KEY","jquery_NO_CONFLICT","fn","CLASS_PREFIX","BSCLS_PREFIX_REGEX","RegExp","DefaultType","animation","template","title","trigger","delay","html","selector","placement","offset","container","fallbackPlacement","boundary","AttachmentMap","AUTO","TOP","RIGHT","BOTTOM","LEFT","Default","HoverState","SHOW","OUT","Event","HIDE","HIDDEN","SHOWN","INSERTED","CLICK","FOCUSIN","FOCUSOUT","MOUSEENTER","MOUSELEAVE","ClassName","FADE","Selector","TOOLTIP","TOOLTIP_INNER","ARROW","Trigger","HOVER","FOCUS","MANUAL","Tooltip","[object Object]","element","config","TypeError","this","_isEnabled","_timeout","_hoverState","_activeTrigger","_popper","_getConfig","tip","_setListeners","event","dataKey","constructor","context","currentTarget","data","_getDelegateConfig","click","_isWithActiveTrigger","_enter","_leave","getTipElement","hasClass","clearTimeout","removeData","off","closest","remove","destroy","css","Error","showEvent","create","isWithContent","shadowRoot","findShadowRoot","isInTheDom","contains","ownerDocument","documentElement","isDefaultPrevented","tipId","getUID","setAttribute","setContent","addClass","call","attachment","_getAttachment","addAttachmentClass","_getContainer","appendTo","modifiers","flip","behavior","arrow","preventOverflow","boundariesElement","onCreate","originalPlacement","_handlePopperPlacementChange","onUpdate","document","body","children","on","noop","complete","_fixTransition","prevHoverState","transitionDuration","getTransitionDurationFromElement","one","TRANSITION_END","emulateTransitionEnd","callback","hideEvent","parentNode","removeChild","_cleanTipClass","removeAttribute","removeClass","scheduleUpdate","Boolean","getTitle","setElementContent","querySelectorAll","$element","content","nodeType","skylark","utils","dom","query","parent","is","empty","append","text","getAttribute","isElement","find","toUpperCase","split","forEach","toggle","eventIn","eventOut","hide","mixin","_fixTitle","titleType","type","show","setTimeout","toString","typeCheckConfig","key","$tip","tabClass","attr","match","length","join","popperData","popperInstance","instance","popper","initConfigAnimation","each","_config","test","_jqueryInterface","Constructor","noConflict"],"mappings":"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","file":"../tooltip.js","sourcesContent":["define([\n    'skylark-langx/langx',\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/eventer',\n    'skylark-utils-dom/plugins',\n    \"./bs4\",\n    'skylark-popper/Popper',\n    './util'\n], function (langx,$, eventer,plugins,bs4,Popper,Util) {\n    'use strict';\n    const NAME = 'tooltip';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.tooltip';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const CLASS_PREFIX = 'bs-tooltip';\n    const BSCLS_PREFIX_REGEX = new RegExp(`(^|\\\\s)${ CLASS_PREFIX }\\\\S+`, 'g');\n    const DefaultType = {\n        animation: 'boolean',\n        template: 'string',\n        title: '(string|element|function)',\n        trigger: 'string',\n        delay: '(number|object)',\n        html: 'boolean',\n        selector: '(string|boolean)',\n        placement: '(string|function)',\n        offset: '(number|string)',\n        container: '(string|element|boolean)',\n        fallbackPlacement: '(string|array)',\n        boundary: '(string|element)'\n    };\n    const AttachmentMap = {\n        AUTO: 'auto',\n        TOP: 'top',\n        RIGHT: 'right',\n        BOTTOM: 'bottom',\n        LEFT: 'left'\n    };\n    const Default = {\n        animation: true,\n        template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<div class=\"tooltip-inner\"></div></div>',\n        trigger: 'hover focus',\n        title: '',\n        delay: 0,\n        html: false,\n        selector: false,\n        placement: 'top',\n        offset: 0,\n        container: false,\n        fallbackPlacement: 'flip',\n        boundary: 'scrollParent'\n    };\n    const HoverState = {\n        SHOW: 'show',\n        OUT: 'out'\n    };\n    const Event = {\n        HIDE: `hide${ EVENT_KEY }`,\n        HIDDEN: `hidden${ EVENT_KEY }`,\n        SHOW: `show${ EVENT_KEY }`,\n        SHOWN: `shown${ EVENT_KEY }`,\n        INSERTED: `inserted${ EVENT_KEY }`,\n        CLICK: `click${ EVENT_KEY }`,\n        FOCUSIN: `focusin${ EVENT_KEY }`,\n        FOCUSOUT: `focusout${ EVENT_KEY }`,\n        MOUSEENTER: `mouseenter${ EVENT_KEY }`,\n        MOUSELEAVE: `mouseleave${ EVENT_KEY }`\n    };\n    const ClassName = {\n        FADE: 'fade',\n        SHOW: 'show'\n    };\n    const Selector = {\n        TOOLTIP: '.tooltip',\n        TOOLTIP_INNER: '.tooltip-inner',\n        ARROW: '.arrow'\n    };\n    const Trigger = {\n        HOVER: 'hover',\n        FOCUS: 'focus',\n        CLICK: 'click',\n        MANUAL: 'manual'\n    };\n    class Tooltip {\n        constructor(element, config) {\n            if (typeof Popper === 'undefined') {\n                throw new TypeError(\"Bootstrap's tooltips require skylark-popper/Popper (https://skylark-popper/Popper.org/)\");\n            }\n            this._isEnabled = true;\n            this._timeout = 0;\n            this._hoverState = '';\n            this._activeTrigger = {};\n            this._popper = null;\n            this.element = element;\n            this.config = this._getConfig(config);\n            this.tip = null;\n            this._setListeners();\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        static get Default() {\n            return Default;\n        }\n        static get NAME() {\n            return NAME;\n        }\n        static get DATA_KEY() {\n            return DATA_KEY;\n        }\n        static get Event() {\n            return Event;\n        }\n        static get EVENT_KEY() {\n            return EVENT_KEY;\n        }\n        static get DefaultType() {\n            return DefaultType;\n        }\n        enable() {\n            this._isEnabled = true;\n        }\n        disable() {\n            this._isEnabled = false;\n        }\n        toggleEnabled() {\n            this._isEnabled = !this._isEnabled;\n        }\n        toggle(event) {\n            if (!this._isEnabled) {\n                return;\n            }\n            if (event) {\n                const dataKey = this.constructor.DATA_KEY;\n                let context = $(event.currentTarget).data(dataKey);\n                if (!context) {\n                    context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n                    $(event.currentTarget).data(dataKey, context);\n                }\n                context._activeTrigger.click = !context._activeTrigger.click;\n                if (context._isWithActiveTrigger()) {\n                    context._enter(null, context);\n                } else {\n                    context._leave(null, context);\n                }\n            } else {\n                if ($(this.getTipElement()).hasClass(ClassName.SHOW)) {\n                    this._leave(null, this);\n                    return;\n                }\n                this._enter(null, this);\n            }\n        }\n        dispose() {\n            clearTimeout(this._timeout);\n            $.removeData(this.element, this.constructor.DATA_KEY);\n            $(this.element).off(this.constructor.EVENT_KEY);\n            $(this.element).closest('.modal').off('hide.bs.modal');\n            if (this.tip) {\n                $(this.tip).remove();\n            }\n            this._isEnabled = null;\n            this._timeout = null;\n            this._hoverState = null;\n            this._activeTrigger = null;\n            if (this._popper !== null) {\n                this._popper.destroy();\n            }\n            this._popper = null;\n            this.element = null;\n            this.config = null;\n            this.tip = null;\n        }\n        show() {\n            if ($(this.element).css('display') === 'none') {\n                throw new Error('Please use show on visible elements');\n            }\n            const showEvent = eventer.create(this.constructor.Event.SHOW);\n            if (this.isWithContent() && this._isEnabled) {\n                $(this.element).trigger(showEvent);\n                const shadowRoot = Util.findShadowRoot(this.element);\n                const isInTheDom = $.contains(shadowRoot !== null ? shadowRoot : this.element.ownerDocument.documentElement, this.element);\n                if (showEvent.isDefaultPrevented() || !isInTheDom) {\n                    return;\n                }\n                const tip = this.getTipElement();\n                const tipId = Util.getUID(this.constructor.NAME);\n                tip.setAttribute('id', tipId);\n                this.element.setAttribute('aria-describedby', tipId);\n                this.setContent();\n                if (this.config.animation) {\n                    $(tip).addClass(ClassName.FADE);\n                }\n                const placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;\n                const attachment = this._getAttachment(placement);\n                this.addAttachmentClass(attachment);\n                const container = this._getContainer();\n                $(tip).data(this.constructor.DATA_KEY, this);\n                if (!$.contains(this.element.ownerDocument.documentElement, this.tip)) {\n                    $(tip).appendTo(container);\n                }\n                $(this.element).trigger(this.constructor.Event.INSERTED);\n                this._popper = new Popper(this.element, tip, {\n                    placement: attachment,\n                    modifiers: {\n                        offset: { offset: this.config.offset },\n                        flip: { behavior: this.config.fallbackPlacement },\n                        arrow: { element: Selector.ARROW },\n                        preventOverflow: { boundariesElement: this.config.boundary }\n                    },\n                    onCreate: data => {\n                        if (data.originalPlacement !== data.placement) {\n                            this._handlePopperPlacementChange(data);\n                        }\n                    },\n                    onUpdate: data => this._handlePopperPlacementChange(data)\n                });\n                $(tip).addClass(ClassName.SHOW);\n                if ('ontouchstart' in document.documentElement) {\n                    $(document.body).children().on('mouseover', null, $.noop);\n                }\n                const complete = () => {\n                    if (this.config.animation) {\n                        this._fixTransition();\n                    }\n                    const prevHoverState = this._hoverState;\n                    this._hoverState = null;\n                    $(this.element).trigger(this.constructor.Event.SHOWN);\n                    if (prevHoverState === HoverState.OUT) {\n                        this._leave(null, this);\n                    }\n                };\n                if ($(this.tip).hasClass(ClassName.FADE)) {\n                    const transitionDuration = Util.getTransitionDurationFromElement(this.tip);\n                    $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n                } else {\n                    complete();\n                }\n            }\n        }\n        hide(callback) {\n            const tip = this.getTipElement();\n            const hideEvent = eventer.create(this.constructor.Event.HIDE);\n            const complete = () => {\n                if (this._hoverState !== HoverState.SHOW && tip.parentNode) {\n                    tip.parentNode.removeChild(tip);\n                }\n                this._cleanTipClass();\n                this.element.removeAttribute('aria-describedby');\n                $(this.element).trigger(this.constructor.Event.HIDDEN);\n                if (this._popper !== null) {\n                    this._popper.destroy();\n                }\n                if (callback) {\n                    callback();\n                }\n            };\n            $(this.element).trigger(hideEvent);\n            if (hideEvent.isDefaultPrevented()) {\n                return;\n            }\n            $(tip).removeClass(ClassName.SHOW);\n            if ('ontouchstart' in document.documentElement) {\n                $(document.body).children().off('mouseover', null, $.noop);\n            }\n            this._activeTrigger[Trigger.CLICK] = false;\n            this._activeTrigger[Trigger.FOCUS] = false;\n            this._activeTrigger[Trigger.HOVER] = false;\n            if ($(this.tip).hasClass(ClassName.FADE)) {\n                const transitionDuration = Util.getTransitionDurationFromElement(tip);\n                $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n            } else {\n                complete();\n            }\n            this._hoverState = '';\n        }\n        update() {\n            if (this._popper !== null) {\n                this._popper.scheduleUpdate();\n            }\n        }\n        isWithContent() {\n            return Boolean(this.getTitle());\n        }\n        addAttachmentClass(attachment) {\n            $(this.getTipElement()).addClass(`${ CLASS_PREFIX }-${ attachment }`);\n        }\n        getTipElement() {\n            this.tip = this.tip || $(this.config.template)[0];\n            return this.tip;\n        }\n        setContent() {\n            const tip = this.getTipElement();\n            this.setElementContent($(tip.querySelectorAll(Selector.TOOLTIP_INNER)), this.getTitle());\n            $(tip).removeClass(`${ ClassName.FADE } ${ ClassName.SHOW }`);\n        }\n        setElementContent($element, content) {\n            const html = this.config.html;\n            if (typeof content === 'object' && (content.nodeType || content.skylark-utils-dom/query)) {\n                if (html) {\n                    if (!$(content).parent().is($element)) {\n                        $element.empty().append(content);\n                    }\n                } else {\n                    $element.text($(content).text());\n                }\n            } else {\n                $element[html ? 'html' : 'text'](content);\n            }\n        }\n        getTitle() {\n            let title = this.element.getAttribute('data-original-title');\n            if (!title) {\n                title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;\n            }\n            return title;\n        }\n        _getContainer() {\n            if (this.config.container === false) {\n                return document.body;\n            }\n            if (Util.isElement(this.config.container)) {\n                return $(this.config.container);\n            }\n            return $(document).find(this.config.container);\n        }\n        _getAttachment(placement) {\n            return AttachmentMap[placement.toUpperCase()];\n        }\n        _setListeners() {\n            const triggers = this.config.trigger.split(' ');\n            triggers.forEach(trigger => {\n                if (trigger === 'click') {\n                    $(this.element).on(this.constructor.Event.CLICK, this.config.selector, event => this.toggle(event));\n                } else if (trigger !== Trigger.MANUAL) {\n                    const eventIn = trigger === Trigger.HOVER ? this.constructor.Event.MOUSEENTER : this.constructor.Event.FOCUSIN;\n                    const eventOut = trigger === Trigger.HOVER ? this.constructor.Event.MOUSELEAVE : this.constructor.Event.FOCUSOUT;\n                    $(this.element).on(eventIn, this.config.selector, event => this._enter(event)).on(eventOut, this.config.selector, event => this._leave(event));\n                }\n            });\n            $(this.element).closest('.modal').on('hide.bs.modal', () => {\n                if (this.element) {\n                    this.hide();\n                }\n            });\n            if (this.config.selector) {\n                //this.config = {\n                //    ...this.config,\n                //    trigger: 'manual',\n                //    selector: ''\n                //};\n                langx.mixin(this.config,{\n                    trigger: 'manual',\n                    selector: ''\n                });\n            } else {\n                this._fixTitle();\n            }\n        }\n        _fixTitle() {\n            const titleType = typeof this.element.getAttribute('data-original-title');\n            if (this.element.getAttribute('title') || titleType !== 'string') {\n                this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');\n                this.element.setAttribute('title', '');\n            }\n        }\n        _enter(event, context) {\n            const dataKey = this.constructor.DATA_KEY;\n            context = context || $(event.currentTarget).data(dataKey);\n            if (!context) {\n                context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n                $(event.currentTarget).data(dataKey, context);\n            }\n            if (event) {\n                context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;\n            }\n            if ($(context.getTipElement()).hasClass(ClassName.SHOW) || context._hoverState === HoverState.SHOW) {\n                context._hoverState = HoverState.SHOW;\n                return;\n            }\n            clearTimeout(context._timeout);\n            context._hoverState = HoverState.SHOW;\n            if (!context.config.delay || !context.config.delay.show) {\n                context.show();\n                return;\n            }\n            context._timeout = setTimeout(() => {\n                if (context._hoverState === HoverState.SHOW) {\n                    context.show();\n                }\n            }, context.config.delay.show);\n        }\n        _leave(event, context) {\n            const dataKey = this.constructor.DATA_KEY;\n            context = context || $(event.currentTarget).data(dataKey);\n            if (!context) {\n                context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n                $(event.currentTarget).data(dataKey, context);\n            }\n            if (event) {\n                context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;\n            }\n            if (context._isWithActiveTrigger()) {\n                return;\n            }\n            clearTimeout(context._timeout);\n            context._hoverState = HoverState.OUT;\n            if (!context.config.delay || !context.config.delay.hide) {\n                context.hide();\n                return;\n            }\n            context._timeout = setTimeout(() => {\n                if (context._hoverState === HoverState.OUT) {\n                    context.hide();\n                }\n            }, context.config.delay.hide);\n        }\n        _isWithActiveTrigger() {\n            for (const trigger in this._activeTrigger) {\n                if (this._activeTrigger[trigger]) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        _getConfig(config) {\n            //config = {\n            //    ...this.constructor.Default,\n            //    ...$(this.element).data(),\n            //    ...typeof config === 'object' && config ? config : {}\n            //};\n            config = langx.mixin({},this.constructor.Default,$(this.element).data(),config);\n            if (typeof config.delay === 'number') {\n                config.delay = {\n                    show: config.delay,\n                    hide: config.delay\n                };\n            }\n            if (typeof config.title === 'number') {\n                config.title = config.title.toString();\n            }\n            if (typeof config.content === 'number') {\n                config.content = config.content.toString();\n            }\n            Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\n            return config;\n        }\n        _getDelegateConfig() {\n            const config = {};\n            if (this.config) {\n                for (const key in this.config) {\n                    if (this.constructor.Default[key] !== this.config[key]) {\n                        config[key] = this.config[key];\n                    }\n                }\n            }\n            return config;\n        }\n        _cleanTipClass() {\n            const $tip = $(this.getTipElement());\n            const tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);\n            if (tabClass !== null && tabClass.length) {\n                $tip.removeClass(tabClass.join(''));\n            }\n        }\n        _handlePopperPlacementChange(popperData) {\n            const popperInstance = popperData.instance;\n            this.tip = popperInstance.popper;\n            this._cleanTipClass();\n            this.addAttachmentClass(this._getAttachment(popperData.placement));\n        }\n        _fixTransition() {\n            const tip = this.getTipElement();\n            const initConfigAnimation = this.config.animation;\n            if (tip.getAttribute('x-placement') !== null) {\n                return;\n            }\n            $(tip).removeClass(ClassName.FADE);\n            this.config.animation = false;\n            this.hide();\n            this.show();\n            this.config.animation = initConfigAnimation;\n        }\n        static _jqueryInterface(config) {\n            return this.each(function () {\n                let data = $(this).data(DATA_KEY);\n                const _config = typeof config === 'object' && config;\n                if (!data && /dispose|hide/.test(config)) {\n                    return;\n                }\n                if (!data) {\n                    data = new Tooltip(this, _config);\n                    $(this).data(DATA_KEY, data);\n                }\n                if (typeof config === 'string') {\n                    if (typeof data[config] === 'undefined') {\n                        throw new TypeError(`No method named \"${ config }\"`);\n                    }\n                    data[config]();\n                }\n            });\n        }\n    }\n    $.fn[NAME] = Tooltip._jqueryInterface;\n    $.fn[NAME].Constructor = Tooltip;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return Tooltip._jqueryInterface;\n    };\n    return Tooltip;\n});"]}
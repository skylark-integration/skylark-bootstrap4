{"version":3,"sources":["tooltip.js"],"names":["define","langx","$","plugins","bs4","Popper","Util","NAME","VERSION","DATA_KEY","EVENT_KEY","jquery_NO_CONFLICT","fn","CLASS_PREFIX","BSCLS_PREFIX_REGEX","RegExp","DefaultType","animation","template","title","trigger","delay","html","selector","placement","offset","container","fallbackPlacement","boundary","AttachmentMap","AUTO","TOP","RIGHT","BOTTOM","LEFT","Default","HoverState","SHOW","OUT","Event","HIDE","HIDDEN","SHOWN","INSERTED","CLICK","FOCUSIN","FOCUSOUT","MOUSEENTER","MOUSELEAVE","ClassName","FADE","Selector","TOOLTIP","TOOLTIP_INNER","ARROW","Trigger","HOVER","FOCUS","MANUAL","Tooltip","[object Object]","element","config","TypeError","this","_isEnabled","_timeout","_hoverState","_activeTrigger","_popper","_getConfig","tip","_setListeners","event","dataKey","constructor","context","currentTarget","data","_getDelegateConfig","click","_isWithActiveTrigger","_enter","_leave","getTipElement","hasClass","clearTimeout","removeData","off","closest","remove","destroy","css","Error","showEvent","isWithContent","shadowRoot","findShadowRoot","isInTheDom","contains","ownerDocument","documentElement","isDefaultPrevented","tipId","getUID","setAttribute","setContent","addClass","call","attachment","_getAttachment","addAttachmentClass","_getContainer","appendTo","modifiers","flip","behavior","arrow","preventOverflow","boundariesElement","onCreate","originalPlacement","_handlePopperPlacementChange","onUpdate","document","body","children","on","noop","complete","_fixTransition","prevHoverState","transitionDuration","getTransitionDurationFromElement","one","TRANSITION_END","emulateTransitionEnd","callback","hideEvent","parentNode","removeChild","_cleanTipClass","removeAttribute","removeClass","scheduleUpdate","Boolean","getTitle","setElementContent","querySelectorAll","$element","content","nodeType","skylark","utils","dom","query","parent","is","empty","append","text","getAttribute","isElement","find","toUpperCase","split","forEach","toggle","eventIn","eventOut","hide","mixin","_fixTitle","titleType","type","show","setTimeout","toString","typeCheckConfig","key","$tip","tabClass","attr","match","length","join","popperData","popperInstance","instance","popper","initConfigAnimation","each","_config","test","_jqueryInterface","Constructor","noConflict"],"mappings":"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","file":"../tooltip.js","sourcesContent":["define([\n    'skylark-langx/langx',\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/plugins',\n    \"./bs4\",\n    'skylark-ui-popper/Popper',\n    './util'\n], function (langx,$, plugins,bs4,Popper,Util) {\n    'use strict';\n    const NAME = 'tooltip';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.tooltip';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const CLASS_PREFIX = 'bs-tooltip';\n    const BSCLS_PREFIX_REGEX = new RegExp(`(^|\\\\s)${ CLASS_PREFIX }\\\\S+`, 'g');\n    const DefaultType = {\n        animation: 'boolean',\n        template: 'string',\n        title: '(string|element|function)',\n        trigger: 'string',\n        delay: '(number|object)',\n        html: 'boolean',\n        selector: '(string|boolean)',\n        placement: '(string|function)',\n        offset: '(number|string)',\n        container: '(string|element|boolean)',\n        fallbackPlacement: '(string|array)',\n        boundary: '(string|element)'\n    };\n    const AttachmentMap = {\n        AUTO: 'auto',\n        TOP: 'top',\n        RIGHT: 'right',\n        BOTTOM: 'bottom',\n        LEFT: 'left'\n    };\n    const Default = {\n        animation: true,\n        template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<div class=\"tooltip-inner\"></div></div>',\n        trigger: 'hover focus',\n        title: '',\n        delay: 0,\n        html: false,\n        selector: false,\n        placement: 'top',\n        offset: 0,\n        container: false,\n        fallbackPlacement: 'flip',\n        boundary: 'scrollParent'\n    };\n    const HoverState = {\n        SHOW: 'show',\n        OUT: 'out'\n    };\n    const Event = {\n        HIDE: `hide${ EVENT_KEY }`,\n        HIDDEN: `hidden${ EVENT_KEY }`,\n        SHOW: `show${ EVENT_KEY }`,\n        SHOWN: `shown${ EVENT_KEY }`,\n        INSERTED: `inserted${ EVENT_KEY }`,\n        CLICK: `click${ EVENT_KEY }`,\n        FOCUSIN: `focusin${ EVENT_KEY }`,\n        FOCUSOUT: `focusout${ EVENT_KEY }`,\n        MOUSEENTER: `mouseenter${ EVENT_KEY }`,\n        MOUSELEAVE: `mouseleave${ EVENT_KEY }`\n    };\n    const ClassName = {\n        FADE: 'fade',\n        SHOW: 'show'\n    };\n    const Selector = {\n        TOOLTIP: '.tooltip',\n        TOOLTIP_INNER: '.tooltip-inner',\n        ARROW: '.arrow'\n    };\n    const Trigger = {\n        HOVER: 'hover',\n        FOCUS: 'focus',\n        CLICK: 'click',\n        MANUAL: 'manual'\n    };\n    class Tooltip {\n        constructor(element, config) {\n            if (typeof Popper === 'undefined') {\n                throw new TypeError(\"Bootstrap's tooltips require skylark-ui-popper/Popper (https://skylark-ui-popper/Popper.org/)\");\n            }\n            this._isEnabled = true;\n            this._timeout = 0;\n            this._hoverState = '';\n            this._activeTrigger = {};\n            this._popper = null;\n            this.element = element;\n            this.config = this._getConfig(config);\n            this.tip = null;\n            this._setListeners();\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        static get Default() {\n            return Default;\n        }\n        static get NAME() {\n            return NAME;\n        }\n        static get DATA_KEY() {\n            return DATA_KEY;\n        }\n        static get Event() {\n            return Event;\n        }\n        static get EVENT_KEY() {\n            return EVENT_KEY;\n        }\n        static get DefaultType() {\n            return DefaultType;\n        }\n        enable() {\n            this._isEnabled = true;\n        }\n        disable() {\n            this._isEnabled = false;\n        }\n        toggleEnabled() {\n            this._isEnabled = !this._isEnabled;\n        }\n        toggle(event) {\n            if (!this._isEnabled) {\n                return;\n            }\n            if (event) {\n                const dataKey = this.constructor.DATA_KEY;\n                let context = $(event.currentTarget).data(dataKey);\n                if (!context) {\n                    context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n                    $(event.currentTarget).data(dataKey, context);\n                }\n                context._activeTrigger.click = !context._activeTrigger.click;\n                if (context._isWithActiveTrigger()) {\n                    context._enter(null, context);\n                } else {\n                    context._leave(null, context);\n                }\n            } else {\n                if ($(this.getTipElement()).hasClass(ClassName.SHOW)) {\n                    this._leave(null, this);\n                    return;\n                }\n                this._enter(null, this);\n            }\n        }\n        dispose() {\n            clearTimeout(this._timeout);\n            $.removeData(this.element, this.constructor.DATA_KEY);\n            $(this.element).off(this.constructor.EVENT_KEY);\n            $(this.element).closest('.modal').off('hide.bs.modal');\n            if (this.tip) {\n                $(this.tip).remove();\n            }\n            this._isEnabled = null;\n            this._timeout = null;\n            this._hoverState = null;\n            this._activeTrigger = null;\n            if (this._popper !== null) {\n                this._popper.destroy();\n            }\n            this._popper = null;\n            this.element = null;\n            this.config = null;\n            this.tip = null;\n        }\n        show() {\n            if ($(this.element).css('display') === 'none') {\n                throw new Error('Please use show on visible elements');\n            }\n            const showEvent = $.Event(this.constructor.Event.SHOW);\n            if (this.isWithContent() && this._isEnabled) {\n                $(this.element).trigger(showEvent);\n                const shadowRoot = Util.findShadowRoot(this.element);\n                const isInTheDom = $.contains(shadowRoot !== null ? shadowRoot : this.element.ownerDocument.documentElement, this.element);\n                if (showEvent.isDefaultPrevented() || !isInTheDom) {\n                    return;\n                }\n                const tip = this.getTipElement();\n                const tipId = Util.getUID(this.constructor.NAME);\n                tip.setAttribute('id', tipId);\n                this.element.setAttribute('aria-describedby', tipId);\n                this.setContent();\n                if (this.config.animation) {\n                    $(tip).addClass(ClassName.FADE);\n                }\n                const placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;\n                const attachment = this._getAttachment(placement);\n                this.addAttachmentClass(attachment);\n                const container = this._getContainer();\n                $(tip).data(this.constructor.DATA_KEY, this);\n                if (!$.contains(this.element.ownerDocument.documentElement, this.tip)) {\n                    $(tip).appendTo(container);\n                }\n                $(this.element).trigger(this.constructor.Event.INSERTED);\n                this._popper = new Popper(this.element, tip, {\n                    placement: attachment,\n                    modifiers: {\n                        offset: { offset: this.config.offset },\n                        flip: { behavior: this.config.fallbackPlacement },\n                        arrow: { element: Selector.ARROW },\n                        preventOverflow: { boundariesElement: this.config.boundary }\n                    },\n                    onCreate: data => {\n                        if (data.originalPlacement !== data.placement) {\n                            this._handlePopperPlacementChange(data);\n                        }\n                    },\n                    onUpdate: data => this._handlePopperPlacementChange(data)\n                });\n                $(tip).addClass(ClassName.SHOW);\n                if ('ontouchstart' in document.documentElement) {\n                    $(document.body).children().on('mouseover', null, $.noop);\n                }\n                const complete = () => {\n                    if (this.config.animation) {\n                        this._fixTransition();\n                    }\n                    const prevHoverState = this._hoverState;\n                    this._hoverState = null;\n                    $(this.element).trigger(this.constructor.Event.SHOWN);\n                    if (prevHoverState === HoverState.OUT) {\n                        this._leave(null, this);\n                    }\n                };\n                if ($(this.tip).hasClass(ClassName.FADE)) {\n                    const transitionDuration = Util.getTransitionDurationFromElement(this.tip);\n                    $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n                } else {\n                    complete();\n                }\n            }\n        }\n        hide(callback) {\n            const tip = this.getTipElement();\n            const hideEvent = $.Event(this.constructor.Event.HIDE);\n            const complete = () => {\n                if (this._hoverState !== HoverState.SHOW && tip.parentNode) {\n                    tip.parentNode.removeChild(tip);\n                }\n                this._cleanTipClass();\n                this.element.removeAttribute('aria-describedby');\n                $(this.element).trigger(this.constructor.Event.HIDDEN);\n                if (this._popper !== null) {\n                    this._popper.destroy();\n                }\n                if (callback) {\n                    callback();\n                }\n            };\n            $(this.element).trigger(hideEvent);\n            if (hideEvent.isDefaultPrevented()) {\n                return;\n            }\n            $(tip).removeClass(ClassName.SHOW);\n            if ('ontouchstart' in document.documentElement) {\n                $(document.body).children().off('mouseover', null, $.noop);\n            }\n            this._activeTrigger[Trigger.CLICK] = false;\n            this._activeTrigger[Trigger.FOCUS] = false;\n            this._activeTrigger[Trigger.HOVER] = false;\n            if ($(this.tip).hasClass(ClassName.FADE)) {\n                const transitionDuration = Util.getTransitionDurationFromElement(tip);\n                $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n            } else {\n                complete();\n            }\n            this._hoverState = '';\n        }\n        update() {\n            if (this._popper !== null) {\n                this._popper.scheduleUpdate();\n            }\n        }\n        isWithContent() {\n            return Boolean(this.getTitle());\n        }\n        addAttachmentClass(attachment) {\n            $(this.getTipElement()).addClass(`${ CLASS_PREFIX }-${ attachment }`);\n        }\n        getTipElement() {\n            this.tip = this.tip || $(this.config.template)[0];\n            return this.tip;\n        }\n        setContent() {\n            const tip = this.getTipElement();\n            this.setElementContent($(tip.querySelectorAll(Selector.TOOLTIP_INNER)), this.getTitle());\n            $(tip).removeClass(`${ ClassName.FADE } ${ ClassName.SHOW }`);\n        }\n        setElementContent($element, content) {\n            const html = this.config.html;\n            if (typeof content === 'object' && (content.nodeType || content.skylark-utils-dom/query)) {\n                if (html) {\n                    if (!$(content).parent().is($element)) {\n                        $element.empty().append(content);\n                    }\n                } else {\n                    $element.text($(content).text());\n                }\n            } else {\n                $element[html ? 'html' : 'text'](content);\n            }\n        }\n        getTitle() {\n            let title = this.element.getAttribute('data-original-title');\n            if (!title) {\n                title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;\n            }\n            return title;\n        }\n        _getContainer() {\n            if (this.config.container === false) {\n                return document.body;\n            }\n            if (Util.isElement(this.config.container)) {\n                return $(this.config.container);\n            }\n            return $(document).find(this.config.container);\n        }\n        _getAttachment(placement) {\n            return AttachmentMap[placement.toUpperCase()];\n        }\n        _setListeners() {\n            const triggers = this.config.trigger.split(' ');\n            triggers.forEach(trigger => {\n                if (trigger === 'click') {\n                    $(this.element).on(this.constructor.Event.CLICK, this.config.selector, event => this.toggle(event));\n                } else if (trigger !== Trigger.MANUAL) {\n                    const eventIn = trigger === Trigger.HOVER ? this.constructor.Event.MOUSEENTER : this.constructor.Event.FOCUSIN;\n                    const eventOut = trigger === Trigger.HOVER ? this.constructor.Event.MOUSELEAVE : this.constructor.Event.FOCUSOUT;\n                    $(this.element).on(eventIn, this.config.selector, event => this._enter(event)).on(eventOut, this.config.selector, event => this._leave(event));\n                }\n            });\n            $(this.element).closest('.modal').on('hide.bs.modal', () => {\n                if (this.element) {\n                    this.hide();\n                }\n            });\n            if (this.config.selector) {\n                //this.config = {\n                //    ...this.config,\n                //    trigger: 'manual',\n                //    selector: ''\n                //};\n                langx.mixin(this.config,{\n                    trigger: 'manual',\n                    selector: ''\n                });\n            } else {\n                this._fixTitle();\n            }\n        }\n        _fixTitle() {\n            const titleType = typeof this.element.getAttribute('data-original-title');\n            if (this.element.getAttribute('title') || titleType !== 'string') {\n                this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');\n                this.element.setAttribute('title', '');\n            }\n        }\n        _enter(event, context) {\n            const dataKey = this.constructor.DATA_KEY;\n            context = context || $(event.currentTarget).data(dataKey);\n            if (!context) {\n                context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n                $(event.currentTarget).data(dataKey, context);\n            }\n            if (event) {\n                context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;\n            }\n            if ($(context.getTipElement()).hasClass(ClassName.SHOW) || context._hoverState === HoverState.SHOW) {\n                context._hoverState = HoverState.SHOW;\n                return;\n            }\n            clearTimeout(context._timeout);\n            context._hoverState = HoverState.SHOW;\n            if (!context.config.delay || !context.config.delay.show) {\n                context.show();\n                return;\n            }\n            context._timeout = setTimeout(() => {\n                if (context._hoverState === HoverState.SHOW) {\n                    context.show();\n                }\n            }, context.config.delay.show);\n        }\n        _leave(event, context) {\n            const dataKey = this.constructor.DATA_KEY;\n            context = context || $(event.currentTarget).data(dataKey);\n            if (!context) {\n                context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n                $(event.currentTarget).data(dataKey, context);\n            }\n            if (event) {\n                context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;\n            }\n            if (context._isWithActiveTrigger()) {\n                return;\n            }\n            clearTimeout(context._timeout);\n            context._hoverState = HoverState.OUT;\n            if (!context.config.delay || !context.config.delay.hide) {\n                context.hide();\n                return;\n            }\n            context._timeout = setTimeout(() => {\n                if (context._hoverState === HoverState.OUT) {\n                    context.hide();\n                }\n            }, context.config.delay.hide);\n        }\n        _isWithActiveTrigger() {\n            for (const trigger in this._activeTrigger) {\n                if (this._activeTrigger[trigger]) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        _getConfig(config) {\n            //config = {\n            //    ...this.constructor.Default,\n            //    ...$(this.element).data(),\n            //    ...typeof config === 'object' && config ? config : {}\n            //};\n            config = langx.mixin({},this.constructor.Default,$(this.element).data(),config);\n            if (typeof config.delay === 'number') {\n                config.delay = {\n                    show: config.delay,\n                    hide: config.delay\n                };\n            }\n            if (typeof config.title === 'number') {\n                config.title = config.title.toString();\n            }\n            if (typeof config.content === 'number') {\n                config.content = config.content.toString();\n            }\n            Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\n            return config;\n        }\n        _getDelegateConfig() {\n            const config = {};\n            if (this.config) {\n                for (const key in this.config) {\n                    if (this.constructor.Default[key] !== this.config[key]) {\n                        config[key] = this.config[key];\n                    }\n                }\n            }\n            return config;\n        }\n        _cleanTipClass() {\n            const $tip = $(this.getTipElement());\n            const tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);\n            if (tabClass !== null && tabClass.length) {\n                $tip.removeClass(tabClass.join(''));\n            }\n        }\n        _handlePopperPlacementChange(popperData) {\n            const popperInstance = popperData.instance;\n            this.tip = popperInstance.popper;\n            this._cleanTipClass();\n            this.addAttachmentClass(this._getAttachment(popperData.placement));\n        }\n        _fixTransition() {\n            const tip = this.getTipElement();\n            const initConfigAnimation = this.config.animation;\n            if (tip.getAttribute('x-placement') !== null) {\n                return;\n            }\n            $(tip).removeClass(ClassName.FADE);\n            this.config.animation = false;\n            this.hide();\n            this.show();\n            this.config.animation = initConfigAnimation;\n        }\n        static _jqueryInterface(config) {\n            return this.each(function () {\n                let data = $(this).data(DATA_KEY);\n                const _config = typeof config === 'object' && config;\n                if (!data && /dispose|hide/.test(config)) {\n                    return;\n                }\n                if (!data) {\n                    data = new Tooltip(this, _config);\n                    $(this).data(DATA_KEY, data);\n                }\n                if (typeof config === 'string') {\n                    if (typeof data[config] === 'undefined') {\n                        throw new TypeError(`No method named \"${ config }\"`);\n                    }\n                    data[config]();\n                }\n            });\n        }\n    }\n    $.fn[NAME] = Tooltip._jqueryInterface;\n    $.fn[NAME].Constructor = Tooltip;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return Tooltip._jqueryInterface;\n    };\n    return Tooltip;\n});"]}
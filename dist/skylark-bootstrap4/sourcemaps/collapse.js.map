{"version":3,"sources":["collapse.js"],"names":["define","langx","$","eventer","plugins","bs4","Util","NAME","VERSION","DATA_KEY","EVENT_KEY","jquery_NO_CONFLICT","fn","Default","toggle","parent","DefaultType","Event","SHOW","SHOWN","HIDE","HIDDEN","CLICK_DATA_API","ClassName","COLLAPSE","COLLAPSING","COLLAPSED","Dimension","WIDTH","HEIGHT","Selector","ACTIVES","DATA_TOGGLE","Collapse","[object Object]","element","config","this","_isTransitioning","_element","_config","_getConfig","_triggerArray","slice","call","document","querySelectorAll","id","toggleList","i","len","length","elem","selector","getSelectorFromElement","filterElement","filter","foundElem","_selector","push","_parent","_getParent","_addAriaAndCollapsedClass","hasClass","hide","show","actives","activesData","getAttribute","classList","contains","not","data","startEvent","create","trigger","isDefaultPrevented","_jqueryInterface","dimension","_getDimension","removeClass","addClass","style","attr","setTransitioning","scrollSize","toUpperCase","transitionDuration","getTransitionDurationFromElement","one","TRANSITION_END","emulateTransitionEnd","getBoundingClientRect","reflow","triggerArrayLength","isTransitioning","removeData","mixin","Boolean","typeCheckConfig","isElement","skylark","utils","dom","query","querySelector","children","each","_getTargetFromElement","triggerArray","isOpen","toggleClass","$this","test","TypeError","on","event","currentTarget","tagName","preventDefault","$trigger","selectors","$target","Constructor","noConflict"],"mappings":"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","file":"../collapse.js","sourcesContent":["define([\n    'skylark-langx/langx',\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/eventer',\n    'skylark-utils-dom/plugins',\n    \"./bs4\",\n    './util'\n], function (langx,$, eventer, plugins,bs4,Util) {\n\n    'use strict';\n    const NAME = 'collapse';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.collapse';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const DATA_API_KEY = '.data-api';\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const Default = {\n        toggle: true,\n        parent: ''\n    };\n    const DefaultType = {\n        toggle: 'boolean',\n        parent: '(string|element)'\n    };\n    const Event = {\n        SHOW: `show${ EVENT_KEY }`,\n        SHOWN: `shown${ EVENT_KEY }`,\n        HIDE: `hide${ EVENT_KEY }`,\n        HIDDEN: `hidden${ EVENT_KEY }`,\n        CLICK_DATA_API: `click${ EVENT_KEY }${ DATA_API_KEY }`\n    };\n    const ClassName = {\n        SHOW: 'show',\n        COLLAPSE: 'collapse',\n        COLLAPSING: 'collapsing',\n        COLLAPSED: 'collapsed'\n    };\n    const Dimension = {\n        WIDTH: 'width',\n        HEIGHT: 'height'\n    };\n    const Selector = {\n        ACTIVES: '.show, .collapsing',\n        DATA_TOGGLE: '[data-toggle=\"collapse\"]'\n    };\n    class Collapse {\n        constructor(element, config) {\n            this._isTransitioning = false;\n            this._element = element;\n            this._config = this._getConfig(config);\n            this._triggerArray = [].slice.call(document.querySelectorAll(`[data-toggle=\"collapse\"][href=\"#${ element.id }\"],` + `[data-toggle=\"collapse\"][data-target=\"#${ element.id }\"]`));\n            const toggleList = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE));\n            for (let i = 0, len = toggleList.length; i < len; i++) {\n                const elem = toggleList[i];\n                const selector = Util.getSelectorFromElement(elem);\n                const filterElement = [].slice.call(document.querySelectorAll(selector)).filter(foundElem => foundElem === element);\n                if (selector !== null && filterElement.length > 0) {\n                    this._selector = selector;\n                    this._triggerArray.push(elem);\n                }\n            }\n            this._parent = this._config.parent ? this._getParent() : null;\n            if (!this._config.parent) {\n                this._addAriaAndCollapsedClass(this._element, this._triggerArray);\n            }\n            if (this._config.toggle) {\n                this.toggle();\n            }\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        static get Default() {\n            return Default;\n        }\n        toggle() {\n            if ($(this._element).hasClass(ClassName.SHOW)) {\n                this.hide();\n            } else {\n                this.show();\n            }\n        }\n        show() {\n            if (this._isTransitioning || $(this._element).hasClass(ClassName.SHOW)) {\n                return;\n            }\n            let actives;\n            let activesData;\n            if (this._parent) {\n                actives = [].slice.call(this._parent.querySelectorAll(Selector.ACTIVES)).filter(elem => {\n                    if (typeof this._config.parent === 'string') {\n                        return elem.getAttribute('data-parent') === this._config.parent;\n                    }\n                    return elem.classList.contains(ClassName.COLLAPSE);\n                });\n                if (actives.length === 0) {\n                    actives = null;\n                }\n            }\n            if (actives) {\n                activesData = $(actives).not(this._selector).data(DATA_KEY);\n                if (activesData && activesData._isTransitioning) {\n                    return;\n                }\n            }\n            const startEvent = eventer.create(Event.SHOW);\n            $(this._element).trigger(startEvent);\n            if (startEvent.isDefaultPrevented()) {\n                return;\n            }\n            if (actives) {\n                Collapse._jqueryInterface.call($(actives).not(this._selector), 'hide');\n                if (!activesData) {\n                    $(actives).data(DATA_KEY, null);\n                }\n            }\n            const dimension = this._getDimension();\n            $(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);\n            this._element.style[dimension] = 0;\n            if (this._triggerArray.length) {\n                $(this._triggerArray).removeClass(ClassName.COLLAPSED).attr('aria-expanded', true);\n            }\n            this.setTransitioning(true);\n            const complete = () => {\n                $(this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.SHOW);\n                this._element.style[dimension] = '';\n                this.setTransitioning(false);\n                $(this._element).trigger(Event.SHOWN);\n            };\n            const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n            const scrollSize = `scroll${ capitalizedDimension }`;\n            const transitionDuration = Util.getTransitionDurationFromElement(this._element);\n            $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n            this._element.style[dimension] = `${ this._element[scrollSize] }px`;\n        }\n        hide() {\n            if (this._isTransitioning || !$(this._element).hasClass(ClassName.SHOW)) {\n                return;\n            }\n            const startEvent = eventer.create(Event.HIDE);\n            $(this._element).trigger(startEvent);\n            if (startEvent.isDefaultPrevented()) {\n                return;\n            }\n            const dimension = this._getDimension();\n            this._element.style[dimension] = `${ this._element.getBoundingClientRect()[dimension] }px`;\n            Util.reflow(this._element);\n            $(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.SHOW);\n            const triggerArrayLength = this._triggerArray.length;\n            if (triggerArrayLength > 0) {\n                for (let i = 0; i < triggerArrayLength; i++) {\n                    const trigger = this._triggerArray[i];\n                    const selector = Util.getSelectorFromElement(trigger);\n                    if (selector !== null) {\n                        const $elem = $([].slice.call(document.querySelectorAll(selector)));\n                        if (!$elem.hasClass(ClassName.SHOW)) {\n                            $(trigger).addClass(ClassName.COLLAPSED).attr('aria-expanded', false);\n                        }\n                    }\n                }\n            }\n            this.setTransitioning(true);\n            const complete = () => {\n                this.setTransitioning(false);\n                $(this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);\n            };\n            this._element.style[dimension] = '';\n            const transitionDuration = Util.getTransitionDurationFromElement(this._element);\n            $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n        }\n        setTransitioning(isTransitioning) {\n            this._isTransitioning = isTransitioning;\n        }\n        dispose() {\n            $.removeData(this._element, DATA_KEY);\n            this._config = null;\n            this._parent = null;\n            this._element = null;\n            this._triggerArray = null;\n            this._isTransitioning = null;\n        }\n        _getConfig(config) {\n            //config = {\n            //    ...Default,\n            //    ...config\n            //};\n            config = langx.mixin({},Default,config);\n            config.toggle = Boolean(config.toggle);\n            Util.typeCheckConfig(NAME, config, DefaultType);\n            return config;\n        }\n        _getDimension() {\n            const hasWidth = $(this._element).hasClass(Dimension.WIDTH);\n            return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;\n        }\n        _getParent() {\n            let parent;\n            if (Util.isElement(this._config.parent)) {\n                parent = this._config.parent;\n                if (typeof this._config.parent.skylark-utils-dom/query !== 'undefined') {\n                    parent = this._config.parent[0];\n                }\n            } else {\n                parent = document.querySelector(this._config.parent);\n            }\n            const selector = `[data-toggle=\"collapse\"][data-parent=\"${ this._config.parent }\"]`;\n            const children = [].slice.call(parent.querySelectorAll(selector));\n            $(children).each((i, element) => {\n                this._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);\n            });\n            return parent;\n        }\n        _addAriaAndCollapsedClass(element, triggerArray) {\n            const isOpen = $(element).hasClass(ClassName.SHOW);\n            if (triggerArray.length) {\n                $(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);\n            }\n        }\n        static _getTargetFromElement(element) {\n            const selector = Util.getSelectorFromElement(element);\n            return selector ? document.querySelector(selector) : null;\n        }\n        static _jqueryInterface(config) {\n            return this.each(function () {\n                const $this = $(this);\n                let data = $this.data(DATA_KEY);\n                //const _config = {\n                //    ...Default,\n                //    ...$this.data(),\n                //    ...typeof config === 'object' && config ? config : {}\n                //};\n                const _config = langx.mixin({},Default,$this.data(),typeof config === 'object' && config ? config : {});\n\n                if (!data && _config.toggle && /show|hide/.test(config)) {\n                    _config.toggle = false;\n                }\n                if (!data) {\n                    data = new Collapse(this, _config);\n                    $this.data(DATA_KEY, data);\n                }\n                if (typeof config === 'string') {\n                    if (typeof data[config] === 'undefined') {\n                        throw new TypeError(`No method named \"${ config }\"`);\n                    }\n                    data[config]();\n                }\n            });\n        }\n    }\n    $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n        if (event.currentTarget.tagName === 'A') {\n            event.preventDefault();\n        }\n        const $trigger = $(this);\n        const selector = Util.getSelectorFromElement(this);\n        const selectors = [].slice.call(document.querySelectorAll(selector));\n        $(selectors).each(function () {\n            const $target = $(this);\n            const data = $target.data(DATA_KEY);\n            const config = data ? 'toggle' : $trigger.data();\n            Collapse._jqueryInterface.call($target, config);\n        });\n    });\n    $.fn[NAME] = Collapse._jqueryInterface;\n    $.fn[NAME].Constructor = Collapse;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return Collapse._jqueryInterface;\n    };\n    return Collapse;\n});"]}
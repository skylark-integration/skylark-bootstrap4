{"version":3,"sources":["toast.js"],"names":["define","langx","$","plugins","bs4","Util","NAME","VERSION","DATA_KEY","EVENT_KEY","jquery_NO_CONFLICT","fn","Event","CLICK_DISMISS","HIDE","HIDDEN","SHOW","SHOWN","ClassName","FADE","SHOWING","DefaultType","animation","autohide","delay","Default","Selector","DATA_DISMISS","Toast","[object Object]","element","config","this","_element","_config","_getConfig","_timeout","_setListeners","trigger","classList","add","complete","remove","hide","transitionDuration","getTransitionDurationFromElement","one","TRANSITION_END","emulateTransitionEnd","withoutTimeout","contains","_close","setTimeout","clearTimeout","off","removeData","mixin","data","typeCheckConfig","constructor","on","each","$element","TypeError","_jqueryInterface","Constructor","noConflict"],"mappings":"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","file":"../toast.js","sourcesContent":["define([\n    'skylark-langx/langx',\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/plugins',\n    \"./bs4\",\n    './util'\n], function (langx,$, plugins,bs4,Util) {\n\n    'use strict';\n    const NAME = 'toast';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.toast';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const Event = {\n        CLICK_DISMISS: `click.dismiss${ EVENT_KEY }`,\n        HIDE: `hide${ EVENT_KEY }`,\n        HIDDEN: `hidden${ EVENT_KEY }`,\n        SHOW: `show${ EVENT_KEY }`,\n        SHOWN: `shown${ EVENT_KEY }`\n    };\n    const ClassName = {\n        FADE: 'fade',\n        HIDE: 'hide',\n        SHOW: 'show',\n        SHOWING: 'showing'\n    };\n    const DefaultType = {\n        animation: 'boolean',\n        autohide: 'boolean',\n        delay: 'number'\n    };\n    const Default = {\n        animation: true,\n        autohide: true,\n        delay: 500\n    };\n    const Selector = { DATA_DISMISS: '[data-dismiss=\"toast\"]' };\n    class Toast {\n        constructor(element, config) {\n            this._element = element;\n            this._config = this._getConfig(config);\n            this._timeout = null;\n            this._setListeners();\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        static get DefaultType() {\n            return DefaultType;\n        }\n        show() {\n            $(this._element).trigger(Event.SHOW);\n            if (this._config.animation) {\n                this._element.classList.add(ClassName.FADE);\n            }\n            const complete = () => {\n                this._element.classList.remove(ClassName.SHOWING);\n                this._element.classList.add(ClassName.SHOW);\n                $(this._element).trigger(Event.SHOWN);\n                if (this._config.autohide) {\n                    this.hide();\n                }\n            };\n            this._element.classList.remove(ClassName.HIDE);\n            this._element.classList.add(ClassName.SHOWING);\n            if (this._config.animation) {\n                const transitionDuration = Util.getTransitionDurationFromElement(this._element);\n                $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n            } else {\n                complete();\n            }\n        }\n        hide(withoutTimeout) {\n            if (!this._element.classList.contains(ClassName.SHOW)) {\n                return;\n            }\n            $(this._element).trigger(Event.HIDE);\n            if (withoutTimeout) {\n                this._close();\n            } else {\n                this._timeout = setTimeout(() => {\n                    this._close();\n                }, this._config.delay);\n            }\n        }\n        dispose() {\n            clearTimeout(this._timeout);\n            this._timeout = null;\n            if (this._element.classList.contains(ClassName.SHOW)) {\n                this._element.classList.remove(ClassName.SHOW);\n            }\n            $(this._element).off(Event.CLICK_DISMISS);\n            $.removeData(this._element, DATA_KEY);\n            this._element = null;\n            this._config = null;\n        }\n        _getConfig(config) {\n            //config = {\n            //    ...Default,\n            //    ...$(this._element).data(),\n            //    ...typeof config === 'object' && config ? config : {}\n            //};\n            const _config = langx.mixin({},Default,$(this._element).data(),typeof config === 'object' && config ? config : {});\n            Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\n            return config;\n        }\n        _setListeners() {\n            $(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, () => this.hide(true));\n        }\n        _close() {\n            const complete = () => {\n                this._element.classList.add(ClassName.HIDE);\n                $(this._element).trigger(Event.HIDDEN);\n            };\n            this._element.classList.remove(ClassName.SHOW);\n            if (this._config.animation) {\n                const transitionDuration = Util.getTransitionDurationFromElement(this._element);\n                $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n            } else {\n                complete();\n            }\n        }\n        static _jqueryInterface(config) {\n            return this.each(function () {\n                const $element = $(this);\n                let data = $element.data(DATA_KEY);\n                const _config = typeof config === 'object' && config;\n                if (!data) {\n                    data = new Toast(this, _config);\n                    $element.data(DATA_KEY, data);\n                }\n                if (typeof config === 'string') {\n                    if (typeof data[config] === 'undefined') {\n                        throw new TypeError(`No method named \"${ config }\"`);\n                    }\n                    data[config](this);\n                }\n            });\n        }\n    }\n    $.fn[NAME] = Toast._jqueryInterface;\n    $.fn[NAME].Constructor = Toast;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return Toast._jqueryInterface;\n    };\n    return Toast;\n});"]}
{"version":3,"sources":["carousel.js"],"names":["define","langx","$","eventer","plugins","bs4","Util","NAME","VERSION","DATA_KEY","EVENT_KEY","jquery_NO_CONFLICT","fn","ARROW_LEFT_KEYCODE","ARROW_RIGHT_KEYCODE","TOUCHEVENT_COMPAT_WAIT","SWIPE_THRESHOLD","Default","interval","keyboard","slide","pause","wrap","touch","DefaultType","Direction","NEXT","PREV","LEFT","RIGHT","Event","SLIDE","SLID","KEYDOWN","MOUSEENTER","MOUSELEAVE","TOUCHSTART","TOUCHMOVE","TOUCHEND","POINTERDOWN","POINTERUP","DRAG_START","LOAD_DATA_API","CLICK_DATA_API","ClassName","CAROUSEL","ACTIVE","ITEM","POINTER_EVENT","Selector","ACTIVE_ITEM","ITEM_IMG","NEXT_PREV","INDICATORS","DATA_SLIDE","DATA_RIDE","PointerType","TOUCH","PEN","Carousel","[object Object]","element","config","this","_items","_interval","_activeElement","_isPaused","_isSliding","touchTimeout","touchStartX","touchDeltaX","_config","_getConfig","_element","_indicatorsElement","querySelector","_touchSupported","document","documentElement","navigator","maxTouchPoints","_pointerEvent","Boolean","window","PointerEvent","MSPointerEvent","_addEventListeners","_slide","hidden","is","css","next","event","triggerTransitionEnd","cycle","clearInterval","setInterval","visibilityState","nextWhenVisible","bind","index","activeIndex","_getItemIndex","length","one","to","direction","off","removeData","mixin","typeCheckConfig","absDeltax","Math","abs","prev","on","_keydown","_addTouchEventListeners","start","originalEvent","pointerType","toUpperCase","clientX","touches","move","end","_handleSwipe","clearTimeout","setTimeout","querySelectorAll","e","preventDefault","classList","add","test","target","tagName","which","parentNode","slice","call","indexOf","activeElement","isNextDirection","isPrevDirection","lastItemIndex","itemIndex","relatedTarget","eventDirectionName","targetIndex","fromIndex","slideEvent","create","from","trigger","indicators","removeClass","nextIndicator","children","addClass","activeElementIndex","nextElement","_getItemByDirection","nextElementIndex","isCycling","directionalClassName","orderClassName","hasClass","_triggerSlideEvent","isDefaultPrevented","_setActiveIndicatorElement","slidEvent","reflow","nextElementInterval","parseInt","getAttribute","defaultInterval","transitionDuration","getTransitionDurationFromElement","TRANSITION_END","emulateTransitionEnd","each","data","action","TypeError","selector","getSelectorFromElement","slideIndex","_jqueryInterface","_dataApiClickHandler","carousels","i","len","$carousel","Constructor","noConflict"],"mappings":"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","file":"../carousel.js","sourcesContent":["define([\n    'skylark-langx/langx',\n    'skylark-utils-dom/query',\n    'skylark-utils-dom/eventer',\n    'skylark-utils-dom/plugins',\n    \"./bs4\",\n    './util'\n], function (langx,$, eventer,plugins,bs4,Util) {\n\n    'use strict';\n    const NAME = 'carousel';\n    const VERSION = '4.1.3';\n    const DATA_KEY = 'bs.carousel';\n    const EVENT_KEY = `.${ DATA_KEY }`;\n    const DATA_API_KEY = '.data-api';\n    const jquery_NO_CONFLICT = $.fn[NAME];\n    const ARROW_LEFT_KEYCODE = 37;\n    const ARROW_RIGHT_KEYCODE = 39;\n    const TOUCHEVENT_COMPAT_WAIT = 500;\n    const SWIPE_THRESHOLD = 40;\n    const Default = {\n        interval: 5000,\n        keyboard: true,\n        slide: false,\n        pause: 'hover',\n        wrap: true,\n        touch: true\n    };\n    const DefaultType = {\n        interval: '(number|boolean)',\n        keyboard: 'boolean',\n        slide: '(boolean|string)',\n        pause: '(string|boolean)',\n        wrap: 'boolean',\n        touch: 'boolean'\n    };\n    const Direction = {\n        NEXT: 'next',\n        PREV: 'prev',\n        LEFT: 'left',\n        RIGHT: 'right'\n    };\n    const Event = {\n        SLIDE: `slide${ EVENT_KEY }`,\n        SLID: `slid${ EVENT_KEY }`,\n        KEYDOWN: `keydown${ EVENT_KEY }`,\n        MOUSEENTER: `mouseenter${ EVENT_KEY }`,\n        MOUSELEAVE: `mouseleave${ EVENT_KEY }`,\n        TOUCHSTART: `touchstart${ EVENT_KEY }`,\n        TOUCHMOVE: `touchmove${ EVENT_KEY }`,\n        TOUCHEND: `touchend${ EVENT_KEY }`,\n        POINTERDOWN: `pointerdown${ EVENT_KEY }`,\n        POINTERUP: `pointerup${ EVENT_KEY }`,\n        DRAG_START: `dragstart${ EVENT_KEY }`,\n        LOAD_DATA_API: `load${ EVENT_KEY }${ DATA_API_KEY }`,\n        CLICK_DATA_API: `click${ EVENT_KEY }${ DATA_API_KEY }`\n    };\n    const ClassName = {\n        CAROUSEL: 'carousel',\n        ACTIVE: 'active',\n        SLIDE: 'slide',\n        RIGHT: 'carousel-item-right',\n        LEFT: 'carousel-item-left',\n        NEXT: 'carousel-item-next',\n        PREV: 'carousel-item-prev',\n        ITEM: 'carousel-item',\n        POINTER_EVENT: 'pointer-event'\n    };\n    const Selector = {\n        ACTIVE: '.active',\n        ACTIVE_ITEM: '.active.carousel-item',\n        ITEM: '.carousel-item',\n        ITEM_IMG: '.carousel-item img',\n        NEXT_PREV: '.carousel-item-next, .carousel-item-prev',\n        INDICATORS: '.carousel-indicators',\n        DATA_SLIDE: '[data-slide], [data-slide-to]',\n        DATA_RIDE: '[data-ride=\"carousel\"]'\n    };\n    const PointerType = {\n        TOUCH: 'touch',\n        PEN: 'pen'\n    };\n    class Carousel {\n        constructor(element, config) {\n            this._items = null;\n            this._interval = null;\n            this._activeElement = null;\n            this._isPaused = false;\n            this._isSliding = false;\n            this.touchTimeout = null;\n            this.touchStartX = 0;\n            this.touchDeltaX = 0;\n            this._config = this._getConfig(config);\n            this._element = element;\n            this._indicatorsElement = this._element.querySelector(Selector.INDICATORS);\n            this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;\n            this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent);\n            this._addEventListeners();\n        }\n        static get VERSION() {\n            return VERSION;\n        }\n        static get Default() {\n            return Default;\n        }\n        next() {\n            if (!this._isSliding) {\n                this._slide(Direction.NEXT);\n            }\n        }\n        nextWhenVisible() {\n            if (!document.hidden && ($(this._element).is(':visible') && $(this._element).css('visibility') !== 'hidden')) {\n                this.next();\n            }\n        }\n        prev() {\n            if (!this._isSliding) {\n                this._slide(Direction.PREV);\n            }\n        }\n        pause(event) {\n            if (!event) {\n                this._isPaused = true;\n            }\n            if (this._element.querySelector(Selector.NEXT_PREV)) {\n                Util.triggerTransitionEnd(this._element);\n                this.cycle(true);\n            }\n            clearInterval(this._interval);\n            this._interval = null;\n        }\n        cycle(event) {\n            if (!event) {\n                this._isPaused = false;\n            }\n            if (this._interval) {\n                clearInterval(this._interval);\n                this._interval = null;\n            }\n            if (this._config.interval && !this._isPaused) {\n                this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);\n            }\n        }\n        to(index) {\n            this._activeElement = this._element.querySelector(Selector.ACTIVE_ITEM);\n            const activeIndex = this._getItemIndex(this._activeElement);\n            if (index > this._items.length - 1 || index < 0) {\n                return;\n            }\n            if (this._isSliding) {\n                $(this._element).one(Event.SLID, () => this.to(index));\n                return;\n            }\n            if (activeIndex === index) {\n                this.pause();\n                this.cycle();\n                return;\n            }\n            const direction = index > activeIndex ? Direction.NEXT : Direction.PREV;\n            this._slide(direction, this._items[index]);\n        }\n        dispose() {\n            $(this._element).off(EVENT_KEY);\n            $.removeData(this._element, DATA_KEY);\n            this._items = null;\n            this._config = null;\n            this._element = null;\n            this._interval = null;\n            this._isPaused = null;\n            this._isSliding = null;\n            this._activeElement = null;\n            this._indicatorsElement = null;\n        }\n        _getConfig(config) {\n            //config = {\n            //    ...Default,\n            //    ...config\n            //};\n            config = langx.mixin({},Default,config);\n            Util.typeCheckConfig(NAME, config, DefaultType);\n            return config;\n        }\n        _handleSwipe() {\n            const absDeltax = Math.abs(this.touchDeltaX);\n            if (absDeltax <= SWIPE_THRESHOLD) {\n                return;\n            }\n            const direction = absDeltax / this.touchDeltaX;\n            if (direction > 0) {\n                this.prev();\n            }\n            if (direction < 0) {\n                this.next();\n            }\n        }\n        _addEventListeners() {\n            if (this._config.keyboard) {\n                $(this._element).on(Event.KEYDOWN, event => this._keydown(event));\n            }\n            if (this._config.pause === 'hover') {\n                $(this._element).on(Event.MOUSEENTER, event => this.pause(event)).on(Event.MOUSELEAVE, event => this.cycle(event));\n            }\n            this._addTouchEventListeners();\n        }\n        _addTouchEventListeners() {\n            if (!this._touchSupported) {\n                return;\n            }\n            const start = event => {\n                if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n                    this.touchStartX = event.originalEvent.clientX;\n                } else if (!this._pointerEvent) {\n                    this.touchStartX = event.originalEvent.touches[0].clientX;\n                }\n            };\n            const move = event => {\n                if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {\n                    this.touchDeltaX = 0;\n                } else {\n                    this.touchDeltaX = event.originalEvent.touches[0].clientX - this.touchStartX;\n                }\n            };\n            const end = event => {\n                if (this._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\n                    this.touchDeltaX = event.originalEvent.clientX - this.touchStartX;\n                }\n                this._handleSwipe();\n                if (this._config.pause === 'hover') {\n                    this.pause();\n                    if (this.touchTimeout) {\n                        clearTimeout(this.touchTimeout);\n                    }\n                    this.touchTimeout = setTimeout(event => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval);\n                }\n            };\n            $(this._element.querySelectorAll(Selector.ITEM_IMG)).on(Event.DRAG_START, e => e.preventDefault());\n            if (this._pointerEvent) {\n                $(this._element).on(Event.POINTERDOWN, event => start(event));\n                $(this._element).on(Event.POINTERUP, event => end(event));\n                this._element.classList.add(ClassName.POINTER_EVENT);\n            } else {\n                $(this._element).on(Event.TOUCHSTART, event => start(event));\n                $(this._element).on(Event.TOUCHMOVE, event => move(event));\n                $(this._element).on(Event.TOUCHEND, event => end(event));\n            }\n        }\n        _keydown(event) {\n            if (/input|textarea/i.test(event.target.tagName)) {\n                return;\n            }\n            switch (event.which) {\n            case ARROW_LEFT_KEYCODE:\n                event.preventDefault();\n                this.prev();\n                break;\n            case ARROW_RIGHT_KEYCODE:\n                event.preventDefault();\n                this.next();\n                break;\n            default:\n            }\n        }\n        _getItemIndex(element) {\n            this._items = element && element.parentNode ? [].slice.call(element.parentNode.querySelectorAll(Selector.ITEM)) : [];\n            return this._items.indexOf(element);\n        }\n        _getItemByDirection(direction, activeElement) {\n            const isNextDirection = direction === Direction.NEXT;\n            const isPrevDirection = direction === Direction.PREV;\n            const activeIndex = this._getItemIndex(activeElement);\n            const lastItemIndex = this._items.length - 1;\n            const isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;\n            if (isGoingToWrap && !this._config.wrap) {\n                return activeElement;\n            }\n            const delta = direction === Direction.PREV ? -1 : 1;\n            const itemIndex = (activeIndex + delta) % this._items.length;\n            return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];\n        }\n        _triggerSlideEvent(relatedTarget, eventDirectionName) {\n            const targetIndex = this._getItemIndex(relatedTarget);\n            const fromIndex = this._getItemIndex(this._element.querySelector(Selector.ACTIVE_ITEM));\n            const slideEvent = eventer.create(Event.SLIDE, {\n                relatedTarget,\n                direction: eventDirectionName,\n                from: fromIndex,\n                to: targetIndex\n            });\n            $(this._element).trigger(slideEvent);\n            return slideEvent;\n        }\n        _setActiveIndicatorElement(element) {\n            if (this._indicatorsElement) {\n                const indicators = [].slice.call(this._indicatorsElement.querySelectorAll(Selector.ACTIVE));\n                $(indicators).removeClass(ClassName.ACTIVE);\n                const nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];\n                if (nextIndicator) {\n                    $(nextIndicator).addClass(ClassName.ACTIVE);\n                }\n            }\n        }\n        _slide(direction, element) {\n            const activeElement = this._element.querySelector(Selector.ACTIVE_ITEM);\n            const activeElementIndex = this._getItemIndex(activeElement);\n            const nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);\n            const nextElementIndex = this._getItemIndex(nextElement);\n            const isCycling = Boolean(this._interval);\n            let directionalClassName;\n            let orderClassName;\n            let eventDirectionName;\n            if (direction === Direction.NEXT) {\n                directionalClassName = ClassName.LEFT;\n                orderClassName = ClassName.NEXT;\n                eventDirectionName = Direction.LEFT;\n            } else {\n                directionalClassName = ClassName.RIGHT;\n                orderClassName = ClassName.PREV;\n                eventDirectionName = Direction.RIGHT;\n            }\n            if (nextElement && $(nextElement).hasClass(ClassName.ACTIVE)) {\n                this._isSliding = false;\n                return;\n            }\n            const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);\n            if (slideEvent.isDefaultPrevented()) {\n                return;\n            }\n            if (!activeElement || !nextElement) {\n                return;\n            }\n            this._isSliding = true;\n            if (isCycling) {\n                this.pause();\n            }\n            this._setActiveIndicatorElement(nextElement);\n            const slidEvent = eventer.create(Event.SLID, {\n                relatedTarget: nextElement,\n                direction: eventDirectionName,\n                from: activeElementIndex,\n                to: nextElementIndex\n            });\n            if ($(this._element).hasClass(ClassName.SLIDE)) {\n                $(nextElement).addClass(orderClassName);\n                Util.reflow(nextElement);\n                $(activeElement).addClass(directionalClassName);\n                $(nextElement).addClass(directionalClassName);\n                const nextElementInterval = parseInt(nextElement.getAttribute('data-interval'), 10);\n                if (nextElementInterval) {\n                    this._config.defaultInterval = this._config.defaultInterval || this._config.interval;\n                    this._config.interval = nextElementInterval;\n                } else {\n                    this._config.interval = this._config.defaultInterval || this._config.interval;\n                }\n                const transitionDuration = Util.getTransitionDurationFromElement(activeElement);\n                $(activeElement).one(Util.TRANSITION_END, () => {\n                    $(nextElement).removeClass(`${ directionalClassName } ${ orderClassName }`).addClass(ClassName.ACTIVE);\n                    $(activeElement).removeClass(`${ ClassName.ACTIVE } ${ orderClassName } ${ directionalClassName }`);\n                    this._isSliding = false;\n                    setTimeout(() => $(this._element).trigger(slidEvent), 0);\n                }).emulateTransitionEnd(transitionDuration);\n            } else {\n                $(activeElement).removeClass(ClassName.ACTIVE);\n                $(nextElement).addClass(ClassName.ACTIVE);\n                this._isSliding = false;\n                $(this._element).trigger(slidEvent);\n            }\n            if (isCycling) {\n                this.cycle();\n            }\n        }\n        static _jqueryInterface(config) {\n            return this.each(function () {\n                let data = $(this).data(DATA_KEY);\n                //let _config = {\n                //    ...Default,\n                //    ...$(this).data()\n                //};\n                let _config = langx.mixin({},Default,$(this).data());\n                if (typeof config === 'object') {\n                    //_config = {\n                    //    ..._config,\n                    //    ...config\n                    //};\n                    langx.mixin(_config,config);\n                }\n                const action = typeof config === 'string' ? config : _config.slide;\n                if (!data) {\n                    data = new Carousel(this, _config);\n                    $(this).data(DATA_KEY, data);\n                }\n                if (typeof config === 'number') {\n                    data.to(config);\n                } else if (typeof action === 'string') {\n                    if (typeof data[action] === 'undefined') {\n                        throw new TypeError(`No method named \"${ action }\"`);\n                    }\n                    data[action]();\n                } else if (_config.interval) {\n                    data.pause();\n                    data.cycle();\n                }\n            });\n        }\n        static _dataApiClickHandler(event) {\n            const selector = Util.getSelectorFromElement(this);\n            if (!selector) {\n                return;\n            }\n            const target = $(selector)[0];\n            if (!target || !$(target).hasClass(ClassName.CAROUSEL)) {\n                return;\n            }\n            //const config = {\n            //    ...$(target).data(),\n            //    ...$(this).data()\n            //};\n            const config = langx.mixin({},$(target).data(),$(this).data());\n            const slideIndex = this.getAttribute('data-slide-to');\n            if (slideIndex) {\n                config.interval = false;\n            }\n            Carousel._jqueryInterface.call($(target), config);\n            if (slideIndex) {\n                $(target).data(DATA_KEY).to(slideIndex);\n            }\n            event.preventDefault();\n        }\n    }\n    $(document).on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler);\n    $(window).on(Event.LOAD_DATA_API, () => {\n        const carousels = [].slice.call(document.querySelectorAll(Selector.DATA_RIDE));\n        for (let i = 0, len = carousels.length; i < len; i++) {\n            const $carousel = $(carousels[i]);\n            Carousel._jqueryInterface.call($carousel, $carousel.data());\n        }\n    });\n    $.fn[NAME] = Carousel._jqueryInterface;\n    $.fn[NAME].Constructor = Carousel;\n    $.fn[NAME].noConflict = () => {\n        $.fn[NAME] = jquery_NO_CONFLICT;\n        return Carousel._jqueryInterface;\n    };\n    return Carousel;\n});"]}